<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:sys="clr-namespace:System;assembly=mscorlib"
					xmlns:lwsc="clr-namespace:log_guard.views.others.log_watcher._scroll_view"
					xmlns:atp="clr-namespace:log_guard.prop.attached_properties"
					xmlns:anim="clr-namespace:cyber_base.implement.views.cyber_anim;assembly=cyber_base">



	<ResourceDictionary.MergedDictionaries>

		<ResourceDictionary Source="pack://application:,,,/log_guard;component/themes/RawSource.xaml" />

		<!--LogWatcher res-->
		<ResourceDictionary Source="pack://application:,,,/log_guard;component/views/others/log_watcher/_log_mapping_border/LogMappingBorder.xaml" />
		<ResourceDictionary Source="pack://application:,,,/log_guard;component/views/others/log_watcher/_scroll_view/ScrollViewWatcher.xaml" />
		<ResourceDictionary Source="pack://application:,,,/log_guard;component/views/others/log_watcher/LogWatcher.xaml" />
		<ResourceDictionary Source="pack://application:,,,/log_guard;component/views/others/log_watcher/_radial_bar/RadialProgressBar.xaml" />
		<ResourceDictionary Source="pack://application:,,,/log_guard;component/views/others/log_watcher/_tree_viewer/HanzaTreeViewer.xaml" />
		<ResourceDictionary Source="pack://application:,,,/log_guard;component/views/others/log_watcher/_item/HanzaTreeViewItem.xaml" />

		<ResourceDictionary Source="pack://application:,,,/log_guard;component/views/others/tripple_toggle/TrippleToggle.xaml" />
		<ResourceDictionary Source="pack://application:,,,/log_guard;component/views/others/loading_list/LoadingListView.xaml" />
		<ResourceDictionary Source="pack://application:,,,/log_guard;component/views/others/header_label/HeaderLabel.xaml" />
		<ResourceDictionary Source="pack://application:,,,/log_guard;component/views/others/calendar/DateTimeSeker.xaml" />

	</ResourceDictionary.MergedDictionaries>

	<ControlTemplate x:Key="UneditableComBoboxTmpl"
					 TargetType="{x:Type ComboBox}">
		<ControlTemplate.Resources>
			<sys:Double x:Key="{x:Static SystemParameters.VerticalScrollBarWidthKey}">6</sys:Double>
			<sys:Double x:Key="{x:Static SystemParameters.HorizontalScrollBarHeightKey}">6</sys:Double>

			<ControlTemplate x:Key="ComboBoxToggleButton"
							 TargetType="{x:Type ToggleButton}">
				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition />
						<ColumnDefinition Width="25" />
					</Grid.ColumnDefinitions>
					<VisualStateManager.VisualStateGroups>
						<VisualStateGroup x:Name="CommonStates">
							<VisualState x:Name="Normal" />
							<VisualState x:Name="MouseOver" />
							<VisualState x:Name="Pressed" />
							<VisualState x:Name="Disabled" />

						</VisualStateGroup>
						<VisualStateGroup x:Name="CheckStates">
							<VisualState x:Name="Checked">
								<Storyboard>
									<ThicknessAnimation Storyboard.TargetProperty="BorderThickness"
														Storyboard.TargetName="Border"
														From="0"
														To="1"
														Duration="0:0:0.1" />
									<DoubleAnimation Storyboard.TargetProperty="(RotateTransform.Angle)"
													 Storyboard.TargetName="AnimRotateTransfrom"
													 From="0"
													 To="-90"
													 Duration="0:0:0.1" />
								</Storyboard>
							</VisualState>
							<VisualState x:Name="Unchecked">
								<Storyboard>
									<ThicknessAnimation Storyboard.TargetProperty="BorderThickness"
														Storyboard.TargetName="Border"
														From="1"
														To="0"
														Duration="0:0:0.1" />
									<DoubleAnimation Storyboard.TargetProperty="(RotateTransform.Angle)"
													 Storyboard.TargetName="AnimRotateTransfrom"
													 From="-90"
													 To="0"
													 Duration="0:0:0.1" />
								</Storyboard>
							</VisualState>
							<VisualState x:Name="Indeterminate" />
						</VisualStateGroup>
					</VisualStateManager.VisualStateGroups>
					<Border x:Name="Border"
							Grid.ColumnSpan="2"
							BorderBrush="{StaticResource BorderbrushEffect_Level1}"
							CornerRadius="5"
							BorderThickness="{Binding BorderThickness, RelativeSource={RelativeSource AncestorType=ComboBox, Mode=FindAncestor}}"
							Background="{Binding Background, RelativeSource={RelativeSource AncestorType=ComboBox, Mode=FindAncestor}}" />

					<Path x:Name="Arrow"
						  Grid.Column="1"
						  Height="9"
						  Width="9"
						  Fill="{StaticResource Foreground_Level3}"
						  HorizontalAlignment="Center"
						  VerticalAlignment="Center"
						  Stretch="Uniform"
						  RenderTransformOrigin="0.5,0.5"
						  Data="{Binding Source={StaticResource DropDownIcon}}">
						<Path.RenderTransform>
							<RotateTransform x:Name="AnimRotateTransfrom"
											 Angle="0" />
						</Path.RenderTransform>
					</Path>
				</Grid>
			</ControlTemplate>

			<ControlTemplate x:Key="ComboBoxTextBox"
							 TargetType="{x:Type TextBox}">
				<Border x:Name="PART_ContentHost"
						Focusable="False"
						Background="{TemplateBinding Background}" />
			</ControlTemplate>

			<Style x:Key="{x:Type ComboBoxItem}"
				   TargetType="{x:Type ComboBoxItem}">
				<Setter Property="Foreground"
						Value="{StaticResource Foreground_Level3}" />
				<Setter Property="SnapsToDevicePixels"
						Value="true" />
				<Setter Property="Height"
						Value="30" />
				<Setter Property="OverridesDefaultStyle"
						Value="true" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type ComboBoxItem}">
							<Border x:Name="Border"
									Padding="2"
									BorderThickness="1"
									BorderBrush="Transparent"
									SnapsToDevicePixels="true"
									Background="Transparent">
								<Border.InputBindings>
									<MouseBinding MouseAction="LeftClick"
												  CommandParameter="{Binding .}"
												  Command="{Binding OnComboBoxItemSelected}" />
								</Border.InputBindings>
								<ContentPresenter VerticalAlignment="Center" />
							</Border>

							<ControlTemplate.Triggers>
								<Trigger Property="IsMouseOver"
										 Value="True">
									<Setter TargetName="Border"
											Property="BorderBrush"
											Value="{StaticResource BorderbrushEffect_Level1}" />
								</Trigger>

								<Trigger Property="IsSelected"
										 Value="True">
									<Setter TargetName="Border"
											Property="Background"
											Value="{StaticResource ButtonBackground_Level1}" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>

			</Style>
		</ControlTemplate.Resources>
		<Grid>
			<VisualStateManager.VisualStateGroups>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal" />
					<VisualState x:Name="MouseOver" />
					<VisualState x:Name="Disabled" />

				</VisualStateGroup>
				<VisualStateGroup x:Name="EditStates">
					<VisualState x:Name="Editable" />
					<VisualState x:Name="Uneditable" />
				</VisualStateGroup>
			</VisualStateManager.VisualStateGroups>

			<ToggleButton x:Name="ToggleButton"
						  Template="{StaticResource ComboBoxToggleButton}"
						  Grid.Column="2"
						  Focusable="false"
						  ClickMode="Press"
						  IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, 
              RelativeSource={RelativeSource TemplatedParent}}" />
			<ContentPresenter x:Name="ContentSite"
							  IsHitTestVisible="False"
							  Content="{TemplateBinding SelectionBoxItem}"
							  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
							  ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
							  Margin="8,0,0,0"
							  VerticalAlignment="Center"
							  HorizontalAlignment="Left">
			</ContentPresenter>
			<TextBox x:Name="PART_EditableTextBox"
					 Style="{x:Null}"
					 Template="{StaticResource ComboBoxTextBox}"
					 HorizontalAlignment="Left"
					 VerticalAlignment="Bottom"
					 Margin="3,3,23,3"
					 Focusable="True"
					 Background="Transparent"
					 Visibility="Hidden"
					 IsReadOnly="{TemplateBinding IsReadOnly}" />
			<Popup x:Name="Popup"
				   Placement="Bottom"
				   IsOpen="{TemplateBinding IsDropDownOpen}"
				   AllowsTransparency="True"
				   Focusable="False"
				   PopupAnimation="Slide">
				<Grid x:Name="DropDown"
					  SnapsToDevicePixels="True"
					  MinWidth="{TemplateBinding ActualWidth}"
					  MaxHeight="{TemplateBinding MaxDropDownHeight}">
					<Rectangle x:Name="DropDownBorder"
							   StrokeThickness="10"
							   Stroke="Transparent"
							   RadiusX="5"
							   RadiusY="5"
							   Fill="{StaticResource Background_Level3}">

					</Rectangle>
					<lwsc:ScrollViewWatcher Margin="5,10,5,10"
											SnapsToDevicePixels="True"
											Background="Transparent"
											CanContentScroll="False"
											Style="{DynamicResource HanzaScrollViewWatcherStyle}"
											ScrollHeaderHeight="0"
											ThumbBackground="{StaticResource ButtonBackground_Level1}"
											ScrollBarBackground="Transparent">
						<ItemsPresenter x:Name="ItemsPresenter"
										SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
					</lwsc:ScrollViewWatcher>
				</Grid>
			</Popup>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="HasItems"
					 Value="false">
				<Setter TargetName="DropDownBorder"
						Property="MinHeight"
						Value="95" />
			</Trigger>
			<Trigger Property="IsGrouping"
					 Value="true">
				<Setter Property="ScrollViewer.CanContentScroll"
						Value="false" />
			</Trigger>

		</ControlTemplate.Triggers>
	</ControlTemplate>

	<Style x:Key="UneditableVirtualComboboxStyle"
		   TargetType="ComboBox">
		<Setter Property="Template"
				Value="{StaticResource UneditableComBoboxTmpl}" />
		<Setter Property="ItemsPanel">
			<Setter.Value>
				<ItemsPanelTemplate>
					<VirtualizingStackPanel VirtualizingPanel.CacheLength="1"
											VirtualizingPanel.CacheLengthUnit="Pixel"
											VirtualizingPanel.IsContainerVirtualizable="True"
											VirtualizingPanel.IsVirtualizing="True"
											VirtualizingPanel.VirtualizationMode="Recycling"
											VirtualizingPanel.IsVirtualizingWhenGrouping="True" />
				</ItemsPanelTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--		Search text box style
	
	This style for text box use search function
	also support for multi engine of search
	
	==========================================================-->
	<ControlTemplate TargetType="{x:Type TextBox}"
					 x:Key="SearchTextBoxTmpl">
		<Grid Name="Border">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*" />
				<ColumnDefinition Width="auto" />
				<ColumnDefinition Width="auto" />
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
				<RowDefinition Height="*" />
				<RowDefinition Height="2" />
				<RowDefinition Height="5" />
			</Grid.RowDefinitions>

			<Rectangle x:Name="BackgroundRec"
					   Grid.Column="0"
					   Grid.ColumnSpan="3"
					   Fill="{TemplateBinding Background}"
					   StrokeThickness="0" />

			<ScrollViewer Margin="5,0,0,0"
						  ToolTip="{Binding Path=(atp:TextBoxAttProperties.FilterConditionHelperContent),
									RelativeSource={RelativeSource TemplatedParent}}"
						  VerticalContentAlignment="Center"
						  VerticalAlignment="Center"
						  VerticalScrollBarVisibility="Disabled"
						  HorizontalScrollBarVisibility="Disabled"
						  x:Name="PART_ContentHost" />

			<TextBlock x:Name="TagTextBox"
					   Margin="7,0,0,0"
					   Text="{TemplateBinding Tag}"
					   Background="Transparent"
					   VerticalAlignment="Center"
					   IsHitTestVisible="False"
					   Foreground="{StaticResource Foreground_Level1}"
					   FontSize="{TemplateBinding FontSize}">
				<TextBlock.Style>
					<Style TargetType="{x:Type TextBlock}">
						<Setter Property="Visibility"
								Value="Collapsed" />
						<Style.Triggers>
							<DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}"
										 Value="">
								<Setter Property="Visibility"
										Value="Visible" />
							</DataTrigger>
						</Style.Triggers>
					</Style>
				</TextBlock.Style>
			</TextBlock>

			<Path x:Name="CheckPath"
				  Stretch="Uniform"
				  Grid.Column="1"
				  Height="10"
				  IsHitTestVisible="False"
				  Width="10"
				  Fill="{StaticResource Foreground_Level2}" />

			<Path x:Name="FilterPath"
				  Stretch="Uniform"
				  Grid.Column="2"
				  Height="10"
				  IsHitTestVisible="False"
				  Data="{Binding Source={StaticResource FilterEnableIcon}}"
				  Width="10"
				  Fill="{StaticResource Foreground_Level2}" />

			<Rectangle x:Name="FeedbackCheckPathRec"
					   Grid.Column="1"
					   Fill="Transparent"
					   StrokeThickness="1"
					   RadiusX="10"
					   RadiusY="10"
					   Width="20"
					   ToolTip="{Binding Path=(atp:TextBoxAttProperties.EngineHelperContent),
									RelativeSource={RelativeSource TemplatedParent}}"
					   Height="20">
				<Rectangle.InputBindings>
					<MouseBinding Command="{Binding Path=(atp:TextBoxAttProperties.EngineLeftDoubleClickCommand),
									RelativeSource={RelativeSource TemplatedParent}}"
								  MouseAction="LeftDoubleClick" />
					<MouseBinding Command="{Binding Path=(atp:TextBoxAttProperties.EngineLeftClickCommand),
									RelativeSource={RelativeSource TemplatedParent}}"
								  MouseAction="LeftClick" />
					<MouseBinding Command="{Binding Path=(atp:TextBoxAttProperties.EngineRightClickCommand),
									RelativeSource={RelativeSource TemplatedParent}}"
								  MouseAction="RightClick" />
				</Rectangle.InputBindings>
				<Rectangle.Style>
					<Style>
						<Style.Triggers>
							<Trigger Property="Rectangle.IsMouseOver"
									 Value="True">
								<Setter Property="Rectangle.Fill"
										Value="#19B8E7F9" />
								<Setter Property="Rectangle.Stroke"
										Value="{StaticResource BorderbrushEffect_Level1}" />
							</Trigger>
						</Style.Triggers>
					</Style>
				</Rectangle.Style>
			</Rectangle>

			<Rectangle x:Name="FeedbackFilterPathRec"
					   Grid.Column="2"
					   Fill="Transparent"
					   StrokeThickness="1"
					   RadiusX="10"
					   RadiusY="10"
					   Width="20"
					   ToolTip="{Binding Path=(atp:TextBoxAttProperties.FilterHelperContent),
									RelativeSource={RelativeSource TemplatedParent}}"
					   Height="20">
				<Rectangle.InputBindings>
					<MouseBinding Command="{Binding Path=(atp:TextBoxAttProperties.FilterLeftDoubleClickCommand),
									RelativeSource={RelativeSource TemplatedParent}}"
								  MouseAction="LeftDoubleClick" />
					<MouseBinding Command="{Binding Path=(atp:TextBoxAttProperties.FilterLeftClickCommand),
									RelativeSource={RelativeSource TemplatedParent}}"
								  MouseAction="LeftClick" />
					<MouseBinding Command="{Binding Path=(atp:TextBoxAttProperties.FilterRightClickCommand),
									RelativeSource={RelativeSource TemplatedParent}}"
								  MouseAction="RightClick" />
				</Rectangle.InputBindings>
				<Rectangle.Style>
					<Style>
						<Style.Triggers>
							<Trigger Property="Rectangle.IsMouseOver"
									 Value="True">
								<Setter Property="Rectangle.Fill"
										Value="#19B8E7F9" />
								<Setter Property="Rectangle.Stroke"
										Value="{StaticResource BorderbrushEffect_Level1}" />
							</Trigger>
						</Style.Triggers>
					</Style>
				</Rectangle.Style>
			</Rectangle>

			<anim:LoadingAnimation Grid.Row="2"
								   Grid.ColumnSpan="3"
								   HorizontalAlignment="Left"
								   IsBusy="{Binding Path=(atp:TextBoxAttProperties.IsBusy),
														   RelativeSource={RelativeSource TemplatedParent}}" />
		</Grid>

		<ControlTemplate.Triggers>
			<DataTrigger Binding="{Binding Path=(atp:TextBoxAttProperties.IsFilterEnable),
									RelativeSource={RelativeSource Self}}"
						 Value="true">
				<Setter TargetName="FilterPath"
						Property="Fill"
						Value="{StaticResource ButtonBackground_Level1}" />
			</DataTrigger>

			<DataTrigger Binding="{Binding Path=(atp:TextBoxAttProperties.Filter),
									RelativeSource={RelativeSource Self}}"
						 Value="Simple">
				<Setter TargetName="CheckPath"
						Property="Data"
						Value="{Binding Source={StaticResource SearchPathGeomerty}}" />
			</DataTrigger>

			<DataTrigger Binding="{Binding Path=(atp:TextBoxAttProperties.Filter),
									RelativeSource={RelativeSource Self}}"
						 Value="Syntax">
				<Setter TargetName="CheckPath"
						Property="Data"
						Value="{Binding Source={StaticResource SyntaxIconPathGeomerty}}" />
			</DataTrigger>

			<DataTrigger Binding="{Binding Path=(atp:TextBoxAttProperties.Filter),
									RelativeSource={RelativeSource Self}}"
						 Value="Advance">
				<Setter TargetName="CheckPath"
						Property="Data"
						Value="{Binding Source={StaticResource AdvanceSearchIconPathGeomerty}}" />
			</DataTrigger>

			<DataTrigger Binding="{Binding Path=(atp:TextBoxAttProperties.IsSupportMultiFilterEngine),
									RelativeSource={RelativeSource Self}}"
						 Value="False">
				<Setter TargetName="CheckPath"
						Property="Visibility"
						Value="Collapsed" />
				<Setter TargetName="FeedbackCheckPathRec"
						Property="Visibility"
						Value="Collapsed" />

			</DataTrigger>

			<DataTrigger Binding="{Binding Path=(atp:TextBoxAttProperties.IsFilterTextBox),
									RelativeSource={RelativeSource Self}}"
						 Value="False">
				<Setter TargetName="FilterPath"
						Property="Visibility"
						Value="Collapsed" />
				<Setter TargetName="FeedbackFilterPathRec"
						Property="Visibility"
						Value="Collapsed" />

			</DataTrigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>


	<!--		Calendar text box style
	
	This style for text box use to pick date time function
	
	==========================================================-->
	<ControlTemplate TargetType="{x:Type TextBox}"
					 x:Key="CalendarTextBoxTmpl">

		<Grid Name="Border">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*" />
				<ColumnDefinition Width="auto" />
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
				<RowDefinition Height="*" />
				<RowDefinition Height="2" />
				<RowDefinition Height="5" />
			</Grid.RowDefinitions>

			<Rectangle x:Name="BackgroundRec"
					   Grid.Column="0"
					   Grid.ColumnSpan="2"
					   Fill="{TemplateBinding Background}"
					   StrokeThickness="0" />

			<ScrollViewer Margin="5,0,0,0"
						  VerticalContentAlignment="Center"
						  VerticalAlignment="Center"
						  VerticalScrollBarVisibility="Disabled"
						  HorizontalScrollBarVisibility="Disabled"
						  x:Name="PART_ContentHost" />
			<TextBlock x:Name="TagTextBox"
					   Margin="7,0,0,0"
					   Text="{TemplateBinding Tag}"
					   Background="Transparent"
					   VerticalAlignment="Center"
					   IsHitTestVisible="False"
					   Foreground="{StaticResource Foreground_Level1}"
					   FontSize="{TemplateBinding FontSize}">
				<TextBlock.Style>
					<Style TargetType="{x:Type TextBlock}">
						<Setter Property="Visibility"
								Value="Collapsed" />
						<Style.Triggers>
							<DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}"
										 Value="">
								<Setter Property="Visibility"
										Value="Visible" />
							</DataTrigger>
						</Style.Triggers>
					</Style>
				</TextBlock.Style>
			</TextBlock>

			<Path x:Name="CheckPath"
				  Stretch="Uniform"
				  Grid.Column="1"
				  Height="10"
				  IsHitTestVisible="False"
				  Width="10"
				  Data="{Binding Source={StaticResource CalendarPathGeomerty}}"
				  Fill="{StaticResource Foreground_Level2}" />


			<Rectangle Grid.Column="1"
					   Fill="Transparent"
					   StrokeThickness="1"
					   RadiusX="10"
					   RadiusY="10"
					   Width="20"
					   ToolTip="{Binding Path=(atp:TextBoxAttProperties.FilterHelperContent),
									RelativeSource={RelativeSource TemplatedParent}}"
					   Height="20">
				<Rectangle.InputBindings>
					<MouseBinding Command="{Binding Path=(atp:TextBoxAttProperties.FilterLeftDoubleClickCommand),
									RelativeSource={RelativeSource TemplatedParent}}"
								  MouseAction="LeftDoubleClick" />
					<MouseBinding Command="{Binding Path=(atp:TextBoxAttProperties.FilterLeftClickCommand),
									RelativeSource={RelativeSource TemplatedParent}}"
								  MouseAction="LeftClick" />
					<MouseBinding Command="{Binding Path=(atp:TextBoxAttProperties.FilterRightClickCommand),
									RelativeSource={RelativeSource TemplatedParent}}"
								  MouseAction="RightClick" />
				</Rectangle.InputBindings>
				<Rectangle.Style>
					<Style>
						<Style.Triggers>
							<Trigger Property="Rectangle.IsMouseOver"
									 Value="True">
								<Setter Property="Rectangle.Fill"
										Value="#19B8E7F9" />
								<Setter Property="Rectangle.Stroke"
										Value="{StaticResource BorderbrushEffect_Level1}" />
							</Trigger>
						</Style.Triggers>
					</Style>
				</Rectangle.Style>
			</Rectangle>

			<anim:LoadingAnimation Grid.Row="2"
								   Grid.ColumnSpan="3"
								   HorizontalAlignment="Left"
								   IsBusy="{Binding Path=(atp:TextBoxAttProperties.IsBusy),
														   RelativeSource={RelativeSource TemplatedParent}}" />

			<Popup x:Name="PART_Popup"
				   Placement="MousePoint"
				   StaysOpen="False"
				   Focusable="False"
				   AllowsTransparency="True"
				   PopupAnimation="Slide">
			</Popup>
		</Grid>
		<ControlTemplate.Triggers>
			<DataTrigger Binding="{Binding Path=(atp:TextBoxAttProperties.IsFilterEnable),
									RelativeSource={RelativeSource Self}}"
						 Value="true">
				<Setter TargetName="CheckPath"
						Property="Fill"
						Value="{StaticResource ButtonBackground_Level1}" />
			</DataTrigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<ControlTemplate TargetType="ListView"
					 x:Key="ListViewLV2Tmpl">
		<ControlTemplate.Resources>
			<sys:Double x:Key="{x:Static SystemParameters.VerticalScrollBarWidthKey}">6</sys:Double>
			<sys:Double x:Key="{x:Static SystemParameters.HorizontalScrollBarHeightKey}">6</sys:Double>

		</ControlTemplate.Resources>
		<Border Name="Border"
				Background="{TemplateBinding Background}">

			<lwsc:ScrollViewWatcher Background="Transparent"
									ScrollHeaderHeight="0"
									Style="{StaticResource HanzaScrollViewWatcherStyle}"
									HorizontalScrollBarVisibility="Disabled"
									ThumbBackground="{StaticResource ButtonBackground_Level1}"
									ScrollBarBackground="Transparent">
				<ItemsPresenter />
			</lwsc:ScrollViewWatcher>
		</Border>

	</ControlTemplate>

	<ControlTemplate TargetType="{x:Type TextBox}"
					 x:Key="NonfocusableTextBox">
		<Border x:Name="border"
				BorderBrush="{TemplateBinding BorderBrush}"
				BorderThickness="{TemplateBinding BorderThickness}"
				Background="{TemplateBinding Background}"
				SnapsToDevicePixels="True">
			<ScrollViewer x:Name="PART_ContentHost"
						  Focusable="false"
						  HorizontalScrollBarVisibility="Hidden"
						  VerticalScrollBarVisibility="Hidden" />
		</Border>
	</ControlTemplate>

</ResourceDictionary>