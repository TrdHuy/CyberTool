<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:sys="clr-namespace:System;assembly=mscorlib"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:cs="clr-namespace:cyber_base.implement.views.cyber_scroll;assembly=cyber_base">

	<ControlTemplate TargetType="{x:Type Button}"
					 x:Key="IconBtnTmpl">
		<Grid Background="Transparent">
			<Path x:Name="ContentPresenterPath"
				  Data="{TemplateBinding Content, Converter={StaticResource GeoPathConverter}}"
				  Stretch="Uniform"
				  Fill="{TemplateBinding Foreground}" />
			<Path x:Name="FeedbackPath"
				  Visibility="Hidden"
				  Data="{TemplateBinding Content, Converter={StaticResource GeoPathConverter}}"
				  Stretch="Uniform"
				  Fill="{TemplateBinding Background}" />
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsMouseOver"
					 Value="True">
				<Setter Property="Visibility"
						TargetName="FeedbackPath"
						Value="Visible" />
				<Setter Property="Cursor"
						Value="Hand" />
			</Trigger>

		</ControlTemplate.Triggers>
	</ControlTemplate>

	<ControlTemplate TargetType="{x:Type Button}"
					 x:Key="CircleBtnTmpl">
		<Grid>
			<Ellipse Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}, Path=ActualHeight}"
					 Fill="{TemplateBinding Background}"
					 StrokeThickness="0"
					 Stroke="{TemplateBinding BorderBrush}"
					 x:Name="ClipCircle"
					 HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
					 VerticalAlignment="{TemplateBinding VerticalAlignment}" />
			<Ellipse Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}, Path=ActualHeight}"
					 StrokeThickness="2"
					 Fill="#19B8E7F9"
					 Stroke="#FFB8EAF9"
					 x:Name="FeedBackElp"
					 Visibility="Hidden"
					 HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
					 VerticalAlignment="{TemplateBinding VerticalAlignment}" />
			<ContentPresenter Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}, Path=ActualHeight}"
							  Content="{TemplateBinding Content}"
							  HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
							  VerticalAlignment="{TemplateBinding VerticalAlignment}">

			</ContentPresenter>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsMouseOver"
					 Value="True">
				<Setter Property="Visibility"
						TargetName="FeedBackElp"
						Value="Visible" />
			</Trigger>

			<Trigger Property="IsPressed"
					 Value="True">
				<Setter Property="Visibility"
						TargetName="FeedBackElp"
						Value="Visible" />
				<Setter Property="Fill"
						TargetName="FeedBackElp"
						Value="#AAB8E7F9" />
			</Trigger>

		</ControlTemplate.Triggers>
	</ControlTemplate>

	<ControlTemplate TargetType="{x:Type Button}"
					 x:Key="RecBtnTmpl">
		<Grid>
			<Rectangle Fill="{TemplateBinding Background}"
					   StrokeThickness="0"
					   Stroke="{TemplateBinding BorderBrush}"
					   x:Name="ClipRec" />
			<Rectangle StrokeThickness="1"
					   Fill="#19B8E7F9"
					   Stroke="#FFB8EAF9"
					   x:Name="FeedBackRec"
					   Visibility="Hidden" />
			<ContentPresenter Margin="{TemplateBinding Padding}"
							  Content="{TemplateBinding Content}"
							  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							  VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
				<ContentPresenter.OpacityMask>
					<VisualBrush Visual="{Binding ElementName=ClipRec}" />
				</ContentPresenter.OpacityMask>
			</ContentPresenter>

		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsMouseOver"
					 Value="True">
				<Setter Property="Visibility"
						TargetName="FeedBackRec"
						Value="Visible" />
			</Trigger>

			<Trigger Property="IsPressed"
					 Value="True">
				<Setter Property="Visibility"
						TargetName="FeedBackRec"
						Value="Visible" />
				<Setter Property="Fill"
						TargetName="FeedBackRec"
						Value="#AAB8E7F9" />
			</Trigger>

			<Trigger Property="IsEnabled"
					 Value="False">
				<Setter Property="Visibility"
						TargetName="FeedBackRec"
						Value="Visible" />
				<Setter Property="Fill"
						TargetName="FeedBackRec"
						Value="#AA9B9B9B" />
				<Setter Property="StrokeThickness"
						TargetName="FeedBackRec"
						Value="0" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<ControlTemplate TargetType="CheckBox"
					 x:Key="ColorCheckBoxTmpl">
		<Grid>
			<Ellipse x:Name="FeedbackElp"
					 Visibility="Hidden"
					 Fill="#AAB8E7F9" />
			<Ellipse x:Name="FillElp"
					 Visibility="Hidden"
					 Fill="{TemplateBinding Background}" />
			<Ellipse x:Name="MainElp"
					 Stroke="{TemplateBinding BorderBrush}" />
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsMouseOver"
					 Value="True">
				<Setter Property="Visibility"
						TargetName="FeedbackElp"
						Value="Visible" />
				<Setter Property="Cursor"
						Value="Hand" />
			</Trigger>

			<Trigger Property="IsChecked"
					 Value="True">
				<Setter Property="Visibility"
						TargetName="FillElp"
						Value="Visible" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<ControlTemplate TargetType="CheckBox"
					 x:Key="RoundCheckBoxTmpl">
		<Border Height="11"
				Width="11"
				CornerRadius="2"
				Background="{TemplateBinding Background}">
			<Grid>
				<Rectangle x:Name="FeedbackRec"
						   RadiusX="2"
						   RadiusY="2"
						   Visibility="Hidden"
						   Fill="#19B8E7F9"
						   Stroke="#FFB8EAF9" />
				<Path x:Name="CheckPath"
					  Fill="{StaticResource Foreground_Level3}"
					  Stretch="Uniform"
					  Margin="1"
					  Visibility="Hidden"
					  Data="{Binding Source={StaticResource CheckPathGeomerty}}" />
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="IsMouseOver"
					 Value="True">
				<Setter Property="Visibility"
						TargetName="FeedbackRec"
						Value="Visible" />
			</Trigger>

			<Trigger Property="IsChecked"
					 Value="True">
				<Setter Property="Visibility"
						TargetName="CheckPath"
						Value="Visible" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<Style TargetType="TabItem"
		   x:Key="CyberTabItemStyle">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TabItem}">
					<Grid>
						<Border Name="Border"
								MinHeight="20"
								MinWidth="50"
								CornerRadius="5,5,0,0"
								BorderThickness="1,1,1,0"
								BorderBrush="Transparent"
								Background="Transparent">
							<TextBlock x:Name="TextContent"
									   VerticalAlignment="Center"
									   HorizontalAlignment="Center"
									   FontSize="9"
									   FontFamily="Calibri"
									   Foreground="{StaticResource Foreground_Level1}"
									   Text="{TemplateBinding Header}"
									   Margin="7,3,7,2">
							</TextBlock>
						</Border>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsSelected"
								 Value="True">
							<Setter TargetName="Border"
									Property="Background"
									Value="{StaticResource ButtonBackground_Level1}" />
							<Setter TargetName="TextContent"
									Property="FontWeight"
									Value="Bold" />
							<Setter TargetName="TextContent"
									Property="Foreground"
									Value="{StaticResource Foreground_Level3}" />

						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver"
										   Value="True" />
								<Condition Property="IsSelected"
										   Value="False" />
							</MultiTrigger.Conditions>

							<Setter TargetName="Border"
									Property="BorderBrush"
									Value="{StaticResource BorderbrushEffect_Level1}" />
							<Setter TargetName="Border"
									Property="CornerRadius"
									Value="0" />
						</MultiTrigger>

					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<ControlTemplate TargetType="{x:Type TextBox}"
					 x:Key="RoundedCommonTextBoxTmpl">
		<Grid>
			<Rectangle x:Name="BackgroundRec"
					   RadiusX="5"
					   RadiusY="5"
					   Fill="{TemplateBinding Background}"
					   StrokeThickness="0" />

			<ScrollViewer Margin="5,0,0,0"
						  VerticalContentAlignment="Center"
						  VerticalAlignment="Center"
						  VerticalScrollBarVisibility="Disabled"
						  HorizontalScrollBarVisibility="Disabled"
						  x:Name="PART_ContentHost" />

			<TextBlock x:Name="TagTextBox"
					   Margin="7,0,0,0"
					   Text="{TemplateBinding Tag}"
					   Background="Transparent"
					   VerticalAlignment="Center"
					   IsHitTestVisible="False"
					   Foreground="{StaticResource Foreground_Level1}"
					   FontSize="{TemplateBinding FontSize}">
				<TextBlock.Style>
					<Style TargetType="{x:Type TextBlock}">
						<Setter Property="Visibility"
								Value="Collapsed" />
						<Style.Triggers>
							<DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}"
										 Value="">
								<Setter Property="Visibility"
										Value="Visible" />
							</DataTrigger>
						</Style.Triggers>
					</Style>
				</TextBlock.Style>
			</TextBlock>
		</Grid>


	</ControlTemplate>

	<ControlTemplate TargetType="{x:Type TextBox}"
					 x:Key="RoundedMultiLineTextBoxTmpl">
		<Grid>
			<Rectangle x:Name="BackgroundRec"
					   RadiusX="5"
					   RadiusY="5"
					   Fill="{TemplateBinding Background}"
					   StrokeThickness="0" />

			<ScrollViewer Margin="5,7,0,0"
						  VerticalContentAlignment="Center"
						  VerticalAlignment="Top"
						  VerticalScrollBarVisibility="Disabled"
						  HorizontalScrollBarVisibility="Disabled"
						  x:Name="PART_ContentHost" />

			<TextBlock x:Name="TagTextBox"
					   Margin="7,7,0,0"
					   Text="{TemplateBinding Tag}"
					   Background="Transparent"
					   VerticalAlignment="Top"
					   IsHitTestVisible="False"
					   Foreground="{StaticResource Foreground_Level1}"
					   FontSize="{TemplateBinding FontSize}">
				<TextBlock.Style>
					<Style TargetType="{x:Type TextBlock}">
						<Setter Property="Visibility"
								Value="Collapsed" />
						<Style.Triggers>
							<DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}"
										 Value="">
								<Setter Property="Visibility"
										Value="Visible" />
							</DataTrigger>
						</Style.Triggers>
					</Style>
				</TextBlock.Style>
			</TextBlock>
		</Grid>


	</ControlTemplate>

	<ControlTemplate x:Key="CyberNoEditComboboxTmpl"
					 TargetType="{x:Type ComboBox}">
		<ControlTemplate.Resources>
			<sys:Double x:Key="{x:Static SystemParameters.VerticalScrollBarWidthKey}">6</sys:Double>
			<sys:Double x:Key="{x:Static SystemParameters.HorizontalScrollBarHeightKey}">6</sys:Double>

			<ControlTemplate x:Key="ComboBoxToggleButton"
							 TargetType="{x:Type ToggleButton}">
				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition />
						<ColumnDefinition Width="25" />
					</Grid.ColumnDefinitions>
					<VisualStateManager.VisualStateGroups>
						<VisualStateGroup x:Name="CommonStates">
							<VisualState x:Name="Normal" />
							<VisualState x:Name="MouseOver" />
							<VisualState x:Name="Pressed" />
							<VisualState x:Name="Disabled" />

						</VisualStateGroup>
						<VisualStateGroup x:Name="CheckStates">
							<VisualState x:Name="Checked">
								<Storyboard>
									<ThicknessAnimation Storyboard.TargetProperty="BorderThickness"
														Storyboard.TargetName="Border"
														From="0"
														To="1"
														Duration="0:0:0.1" />
									<DoubleAnimation Storyboard.TargetProperty="(RotateTransform.Angle)"
													 Storyboard.TargetName="AnimRotateTransfrom"
													 From="0"
													 To="-90"
													 Duration="0:0:0.1" />
								</Storyboard>
							</VisualState>
							<VisualState x:Name="Unchecked">
								<Storyboard>
									<ThicknessAnimation Storyboard.TargetProperty="BorderThickness"
														Storyboard.TargetName="Border"
														From="1"
														To="0"
														Duration="0:0:0.1" />
									<DoubleAnimation Storyboard.TargetProperty="(RotateTransform.Angle)"
													 Storyboard.TargetName="AnimRotateTransfrom"
													 From="-90"
													 To="0"
													 Duration="0:0:0.1" />
								</Storyboard>
							</VisualState>
							<VisualState x:Name="Indeterminate" />
						</VisualStateGroup>
					</VisualStateManager.VisualStateGroups>
					<Border x:Name="Border"
							Grid.ColumnSpan="2"
							BorderBrush="{StaticResource BorderbrushEffect_Level1}"
							CornerRadius="5"
							BorderThickness="{Binding BorderThickness, RelativeSource={RelativeSource AncestorType=ComboBox, Mode=FindAncestor}}"
							Background="{Binding Background, RelativeSource={RelativeSource AncestorType=ComboBox, Mode=FindAncestor}}" />

					<Path x:Name="Arrow"
						  Grid.Column="1"
						  Height="9"
						  Width="9"
						  Fill="{StaticResource Foreground_Level3}"
						  HorizontalAlignment="Center"
						  VerticalAlignment="Center"
						  Stretch="Uniform"
						  RenderTransformOrigin="0.5,0.5"
						  Data="{Binding Source={StaticResource DropDownIcon}}">
						<Path.RenderTransform>
							<RotateTransform x:Name="AnimRotateTransfrom"
											 Angle="0" />
						</Path.RenderTransform>
					</Path>
				</Grid>
			</ControlTemplate>

			<ControlTemplate x:Key="ComboBoxTextBox"
							 TargetType="{x:Type TextBox}">
				<Border x:Name="PART_ContentHost"
						Focusable="False"
						Background="{TemplateBinding Background}" />
			</ControlTemplate>

			<Style x:Key="{x:Type ComboBoxItem}"
				   TargetType="{x:Type ComboBoxItem}">
				<Setter Property="Foreground"
						Value="{StaticResource Foreground_Level3}" />
				<Setter Property="SnapsToDevicePixels"
						Value="true" />
				<Setter Property="Height"
						Value="30" />
				<Setter Property="OverridesDefaultStyle"
						Value="true" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type ComboBoxItem}">
							<Border x:Name="Border"
									Padding="2"
									BorderThickness="1"
									BorderBrush="Transparent"
									SnapsToDevicePixels="true"
									Background="Transparent">
								<Border.InputBindings>
									<MouseBinding MouseAction="LeftClick"
												  CommandParameter="{Binding .}"
												  Command="{Binding OnComboBoxItemSelected}" />
								</Border.InputBindings>
								<ContentPresenter VerticalAlignment="Center" />
							</Border>

							<ControlTemplate.Triggers>
								<Trigger Property="IsMouseOver"
										 Value="True">
									<Setter TargetName="Border"
											Property="BorderBrush"
											Value="{StaticResource BorderbrushEffect_Level1}" />
								</Trigger>

								<Trigger Property="IsSelected"
										 Value="True">
									<Setter TargetName="Border"
											Property="Background"
											Value="{StaticResource ButtonBackground_Level1}" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>

			</Style>
		</ControlTemplate.Resources>
		<Grid>
			<VisualStateManager.VisualStateGroups>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal" />
					<VisualState x:Name="MouseOver" />
					<VisualState x:Name="Disabled" />

				</VisualStateGroup>
				<VisualStateGroup x:Name="EditStates">
					<VisualState x:Name="Editable" />
					<VisualState x:Name="Uneditable" />
				</VisualStateGroup>
			</VisualStateManager.VisualStateGroups>

			<ToggleButton x:Name="ToggleButton"
						  Template="{StaticResource ComboBoxToggleButton}"
						  Grid.Column="2"
						  Focusable="false"
						  ClickMode="Press"
						  IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, 
              RelativeSource={RelativeSource TemplatedParent}}" />
			<ContentPresenter x:Name="ContentSite"
							  IsHitTestVisible="False"
							  Content="{TemplateBinding SelectionBoxItem}"
							  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
							  ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
							  Margin="8,0,0,0"
							  VerticalAlignment="Center"
							  HorizontalAlignment="Left">
			</ContentPresenter>

			<TextBlock x:Name="TagTextBox"
					   Margin="8,0,0,0"
					   Text="{TemplateBinding Tag}"
					   Background="Transparent"
					   VerticalAlignment="Center"
					   IsHitTestVisible="False"
					   Foreground="{StaticResource Foreground_Level1}"
					   FontSize="{TemplateBinding FontSize}">
				<TextBlock.Style>
					<Style TargetType="{x:Type TextBlock}">
						<Setter Property="Visibility"
								Value="Hidden" />
						<Style.Triggers>
							<DataTrigger Binding="{Binding SelectedItem, RelativeSource={RelativeSource TemplatedParent}}"
										 Value="{x:Null}">
								<Setter Property="Visibility"
										Value="Visible" />
							</DataTrigger>
						</Style.Triggers>
					</Style>
				</TextBlock.Style>
			</TextBlock>

			<TextBox x:Name="PART_EditableTextBox"
					 Style="{x:Null}"
					 Template="{StaticResource ComboBoxTextBox}"
					 HorizontalAlignment="Left"
					 VerticalAlignment="Bottom"
					 Margin="3,3,23,3"
					 Focusable="True"
					 Background="Transparent"
					 Visibility="Hidden"
					 IsReadOnly="{TemplateBinding IsReadOnly}" />
			<Popup x:Name="Popup"
				   Placement="Bottom"
				   IsOpen="{TemplateBinding IsDropDownOpen}"
				   AllowsTransparency="True"
				   Focusable="False"
				   PopupAnimation="Slide">
				<Grid x:Name="DropDown"
					  SnapsToDevicePixels="True"
					  MinWidth="{TemplateBinding ActualWidth}"
					  MaxHeight="{TemplateBinding MaxDropDownHeight}">
					<Rectangle x:Name="DropDownBorder"
							   StrokeThickness="10"
							   Stroke="Transparent"
							   RadiusX="5"
							   RadiusY="5"
							   Fill="{StaticResource Background_Level3}">

					</Rectangle>
					<cs:CyberScrollView Margin="5,10,5,10"
										CanContentScroll="False"
										SnapsToDevicePixels="True"
										Background="Transparent"
										ScrollHeaderHeight="0"
										IsMouseOverExpandScrollbar="True"
										ThumbBackground="{StaticResource ButtonBackground_Level1}"
										ScrollBarBackground="Transparent">
						<ItemsPresenter x:Name="ItemsPresenter"
										SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
					</cs:CyberScrollView>
				</Grid>
			</Popup>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="HasItems"
					 Value="false">
				<Setter TargetName="DropDownBorder"
						Property="MinHeight"
						Value="95" />
			</Trigger>
			<Trigger Property="IsGrouping"
					 Value="true">
				<Setter Property="ScrollViewer.CanContentScroll"
						Value="false" />
			</Trigger>

		</ControlTemplate.Triggers>
	</ControlTemplate>

	<Style x:Key="CyberNoEditComboboxStyle"
		   TargetType="ComboBox">
		<Setter Property="Template"
				Value="{StaticResource CyberNoEditComboboxTmpl}" />
		<Setter Property="ItemsPanel">
			<Setter.Value>
				<ItemsPanelTemplate>
					<VirtualizingStackPanel VirtualizingPanel.CacheLength="1"
											VirtualizingPanel.CacheLengthUnit="Pixel"
											VirtualizingPanel.IsContainerVirtualizable="True"
											VirtualizingPanel.IsVirtualizing="True"
											VirtualizingPanel.VirtualizationMode="Recycling"
											VirtualizingPanel.IsVirtualizingWhenGrouping="True" />
				</ItemsPanelTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="RoundedProgressBar"
		   TargetType="{x:Type ProgressBar}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ProgressBar}">
					<Grid MinHeight="14"
						  MinWidth="200">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Determinate" />
								<VisualState x:Name="Indeterminate">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="00:00:00"
																	   Storyboard.TargetName="PART_Indicator"
																	   Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<SolidColorBrush>Transparent</SolidColorBrush>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>

									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<Border x:Name="PART_Track"
								CornerRadius="5"
								BorderThickness="0"
								Background="{TemplateBinding Background}" />

						<Border x:Name="PART_Indicator"
								CornerRadius="5"
								HorizontalAlignment="Left"
								Background="{TemplateBinding Foreground}">
						</Border>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>

	</Style>

	<!--none virtualizing panel-->
	<Style x:Key="CyberScrollStyle"
		   TargetType="ContentControl">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ContentControl">
					<ControlTemplate.Resources>
						<sys:Double x:Key="{x:Static SystemParameters.VerticalScrollBarWidthKey}">6</sys:Double>
						<sys:Double x:Key="{x:Static SystemParameters.HorizontalScrollBarHeightKey}">6</sys:Double>
					</ControlTemplate.Resources>
					<cs:CyberScrollView Content="{TemplateBinding Content}"
										SnapsToDevicePixels="True"
										CanContentScroll="False"
										Background="{TemplateBinding Background}"
										ScrollHeaderHeight="0"
										ThumbBackground="{TemplateBinding BorderBrush}"
										ScrollBarBackground="Transparent">

					</cs:CyberScrollView>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--none virtualizing panel-->
	<Style x:Key="CyberCollapsibleScrollStyle"
		   TargetType="ContentControl">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ContentControl">
					<ControlTemplate.Resources>
						<sys:Double x:Key="{x:Static SystemParameters.VerticalScrollBarWidthKey}">6</sys:Double>
						<sys:Double x:Key="{x:Static SystemParameters.HorizontalScrollBarHeightKey}">6</sys:Double>
					</ControlTemplate.Resources>
					<cs:CyberScrollView Content="{TemplateBinding Content}"
										CanContentScroll="False"
										SnapsToDevicePixels="True"
										IsMouseOverExpandScrollbar="True"
										Background="{TemplateBinding Background}"
										ScrollHeaderHeight="0"
										ThumbBackground="{TemplateBinding BorderBrush}"
										ScrollBarBackground="Transparent"
										Style="{StaticResource OverlapScrollbarStyle}">
					</cs:CyberScrollView>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>