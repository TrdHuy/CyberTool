<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:local="clr-namespace:cyber_tool.app_resources.controls.cyber_window">
	<Style TargetType="{x:Type local:CyberWindow}"
		   x:Key="DefaultCyberStyle">
		<Setter Property="ChromeBackground" 
				Value="#20FFFFFF"/>
		<Setter Property="AllowsTransparency"
				Value="True" />
		<Setter Property="Background"
				Value="Transparent" />
		<Setter Property="WindowStyle"
				Value="None" />
		<Setter Property="ResizeMode"
				Value="CanResizeWithGrip" />
		
		<Setter Property="WindowChrome.WindowChrome">
			<Setter.Value>
				<WindowChrome CaptionHeight="30" />
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type local:CyberWindow}">
					<ControlTemplate.Resources>

						<!--Window control button-->
						<Style x:Key="WindowControlButton"
							   TargetType="{x:Type Button}">
							<Style.Triggers>
								<Trigger Property="IsMouseOver"
										 Value="True">
									<Setter Property="Foreground"
											Value="{StaticResource Foreground_Level3}" />
								</Trigger>
							</Style.Triggers>
							<Setter Property="WindowChrome.IsHitTestVisibleInChrome"
									Value="True" />
							<Setter Property="Background"
									Value="Transparent" />
							<Setter Property="Height"
									Value="30" />
							<Setter Property="Width"
									Value="30" />
							<Setter Property="VerticalAlignment"
									Value="Stretch" />
							<Setter Property="Foreground"
									Value="{StaticResource Foreground_Level2}" />
							<Setter Property="Template">
								<Setter.Value>
									<ControlTemplate TargetType="{x:Type Button}">
										<Border Background="{TemplateBinding Background}"
												Padding="{TemplateBinding Padding}"
												x:Name="MainBorder">
											<Path	x:Name="ContentPath"
													Width="8"
													Height="8"
													Fill="{TemplateBinding Foreground}"
													Data="{Binding Source={StaticResource CloseButton}}"
													Stretch="Uniform" />
										</Border>
										<ControlTemplate.Triggers>
											<Trigger Property="IsMouseOver"
													 Value="True">
												<Setter Property="Height"
														TargetName="ContentPath"
														Value="10" />
												<Setter Property="Width"
														TargetName="ContentPath"
														Value="10" />
												<Setter Property="Background"
														TargetName="MainBorder"
														Value="#4CEB2838" />
											</Trigger>

										</ControlTemplate.Triggers>
									</ControlTemplate>
								</Setter.Value>
							</Setter>


						</Style>


						<!--Window Maximize button-->
						<Style x:Key="WindowMaximizeButton"
							   BasedOn="{StaticResource WindowControlButton}"
							   TargetType="{x:Type Button}">
							<Style.Triggers>
								<DataTrigger Value="NoResize"
											 Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Path=ResizeMode}">
									<Setter Property="Visibility"
											Value="Collapsed" />
								</DataTrigger>

								<DataTrigger Value="CanResize"
											 Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Path=ResizeMode}">
									<Setter Property="Visibility"
											Value="Visible" />
								</DataTrigger>
							</Style.Triggers>
							<Setter Property="Template">
								<Setter.Value>
									<ControlTemplate TargetType="{x:Type Button}">
										<Border Background="{TemplateBinding Background}"
												Padding="{TemplateBinding Padding}"
												x:Name="MainBorder">
											<Path	x:Name="ContentPath"
													Width="8"
													Height="8"
													Fill="{TemplateBinding Foreground}"
													Data="{Binding Source={StaticResource MaximizeButton}}"
													Stretch="Uniform" />
										</Border>
										<ControlTemplate.Triggers>
											<Trigger Property="IsMouseOver"
													 Value="True">
												<Setter Property="Height"
														TargetName="ContentPath"
														Value="10" />
												<Setter Property="Width"
														TargetName="ContentPath"
														Value="10" />
												<Setter Property="Background"
														TargetName="MainBorder"
														Value="#4C989898" />
											</Trigger>
											<!--<MultiDataTrigger>
													<MultiDataTrigger.Conditions>
														<Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}, Path=IsMouseOver}"
																   Value="True" />
														<Condition Value="Normal"
																   Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Path=WindowState}" />
													</MultiDataTrigger.Conditions>
													<Setter Property="Data"
															TargetName="ContentPath"
															Value="{Binding Source={StaticResource MaximizeMouseOverButton}}" />
												</MultiDataTrigger>
												<MultiDataTrigger>
													<MultiDataTrigger.Conditions>
														<Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}, Path=IsMouseOver}"
																   Value="True" />
														<Condition Value="Maximized"
																   Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Path=WindowState}" />
													</MultiDataTrigger.Conditions>
													<Setter Property="Data"
															TargetName="ContentPath"
															Value="{Binding Source={StaticResource SmallmizeMouseOverButton}}" />
												</MultiDataTrigger>
												<DataTrigger Value="Maximized"
															 Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Path=WindowState}">
													<Setter Property="Data"
															TargetName="ContentPath"
															Value="{Binding Source={StaticResource SmallmizeButton}}" />
												</DataTrigger>-->
										</ControlTemplate.Triggers>
									</ControlTemplate>
								</Setter.Value>
							</Setter>
						</Style>

						<!--Window smallmize button-->
						<Style x:Key="WindowSmallmizeButton"
							   BasedOn="{StaticResource WindowControlButton}"
							   TargetType="{x:Type Button}">
							<Style.Triggers>
								<DataTrigger Value="NoResize"
											 Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Path=ResizeMode}">
									<Setter Property="Visibility"
											Value="Collapsed" />
								</DataTrigger>

								<DataTrigger Value="CanResize"
											 Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Path=ResizeMode}">
									<Setter Property="Visibility"
											Value="Visible" />
								</DataTrigger>
							</Style.Triggers>
							<Setter Property="Template">
								<Setter.Value>
									<ControlTemplate TargetType="{x:Type Button}">
										<Border Background="{TemplateBinding Background}"
												Padding="{TemplateBinding Padding}"
												x:Name="MainBorder">
											<Path	x:Name="ContentPath"
													Width="8"
													Height="8"
													Fill="{TemplateBinding Foreground}"
													Data="{Binding Source={StaticResource SmallmizeButton}}"
													Stretch="Uniform" />
										</Border>
										<ControlTemplate.Triggers>
											<Trigger Property="IsMouseOver"
													 Value="True">
												<Setter Property="Height"
														TargetName="ContentPath"
														Value="10" />
												<Setter Property="Width"
														TargetName="ContentPath"
														Value="10" />
												<Setter Property="Background"
														TargetName="MainBorder"
														Value="#4C989898" />
											</Trigger>
										</ControlTemplate.Triggers>
									</ControlTemplate>
								</Setter.Value>
							</Setter>
						</Style>

						<!-- Window Minimize Button -->
						<Style x:Key="WindowMinimizeButton"
							   BasedOn="{StaticResource WindowControlButton}"
							   TargetType="{x:Type Button}">
							<Setter Property="Template">
								<Setter.Value>
									<ControlTemplate TargetType="{x:Type Button}">
										<Border x:Name="MainBorder"
												Background="{TemplateBinding Background}"
												Padding="{TemplateBinding Padding}">
											<Path	x:Name="ContentPath"
													Width="8"
													Height="8"
													Fill="{TemplateBinding Foreground}"
													Data="{Binding Source={StaticResource MinimizeButton}}"
													Stretch="Uniform" />
										</Border>
										<ControlTemplate.Triggers>
											<Trigger Property="IsMouseOver"
													 Value="True">
												<Setter Property="Height"
														TargetName="ContentPath"
														Value="10" />
												<Setter Property="Width"
														TargetName="ContentPath"
														Value="10" />
												<Setter Property="Background"
														TargetName="MainBorder"
														Value="#4C989898" />
											</Trigger>
										</ControlTemplate.Triggers>
									</ControlTemplate>
								</Setter.Value>
							</Setter>
						</Style>

					</ControlTemplate.Resources>

					<Border x:Name="MainBorderContainer"
							CornerRadius="30"
							Width="{TemplateBinding Width}"
							Height="{TemplateBinding Height}"
							DataContext="{Binding RelativeSource={RelativeSource AncestorType=local:CyberWindow, Mode=FindAncestor}}">

						<Border.LayoutTransform>
							<ScaleTransform x:Name="MainBorderCtn_ScaleTransform"
											ScaleX="1"
											ScaleY="1" />
						</Border.LayoutTransform>
						<Border.OpacityMask>
							<VisualBrush Visual="{Binding ElementName=RecMask}" />
						</Border.OpacityMask>
						<!--Content and title bar field-->
						<Grid x:Name="ContentAndTitleGrid"
							  Grid.Column="1">
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="*" />
							</Grid.RowDefinitions>
							<Rectangle x:Name="RecMask"
									   Fill="{TemplateBinding Background}"
									   RadiusX="0"
									   RadiusY="0"
									   Grid.RowSpan="2" />

							<!--Title bar-->
							<Grid x:Name="TitleBartGrid"
								  Grid.Row="0"
								  Height="30"
								  VerticalAlignment="Stretch"
								  Background="{Binding ChromeBackground}"
								  WindowChrome.IsHitTestVisibleInChrome="False">

								<Grid.ColumnDefinitions>
									<!--Title-->
									<ColumnDefinition Width="*" />
									<!--Windows Button-->
									<ColumnDefinition Width="Auto" />

								</Grid.ColumnDefinitions>

								<!--Title-->
								<Viewbox x:Name="TitleViewBox"
										 Grid.Column="0"
										 HorizontalAlignment="Left"
										 Grid.ColumnSpan="3"
										 Margin="20,8,8,8">
									<TextBlock x:Name="SubContentTitleText"
											   FontWeight="Bold"
											   FontFamily="Calibri"
											   Foreground="{StaticResource Foreground_Level2}"
											   Text="{TemplateBinding Title}"
											   TextAlignment="Center" />
								</Viewbox>

								<!--Window Buttons-->
								<StackPanel x:Name="WindowControlPanel"
											Grid.Column="1"
											Orientation="Horizontal">

									<Button x:Name="MinimizeButton"
											Style="{StaticResource WindowMinimizeButton}" />
									<Button x:Name="SmallmizeButton"
											Style="{StaticResource WindowSmallmizeButton}" />
									<Button x:Name="MaximizeButton"
											Style="{StaticResource WindowMaximizeButton}" />
									<Button x:Name="CloseButton"
											Style="{StaticResource WindowControlButton}" />
								</StackPanel>

							</Grid>

							<!--Content field-->
							<ContentPresenter x:Name="DWContentPresenter"
											  Grid.Row="1"
											  Margin="{TemplateBinding Padding}"
											  Content="{TemplateBinding Content}"
											  Visibility="Visible">
							</ContentPresenter>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="WindowState"
								 Value="Maximized">
							<Setter TargetName="MaximizeButton"
									Property="Visibility"
									Value="Collapsed" />
						</Trigger>

						<Trigger Property="WindowState"
								 Value="Normal">
							<Setter TargetName="SmallmizeButton"
									Property="Visibility"
									Value="Collapsed" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

</ResourceDictionary>