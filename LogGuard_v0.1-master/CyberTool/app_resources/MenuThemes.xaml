<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

	<Style x:Key="{x:Type ContextMenu}"
		   TargetType="{x:Type ContextMenu}">
		<Setter Property="Background"
				Value="{StaticResource InflectBackground_Level1}" />
		<Setter Property="Foreground"
				Value="{StaticResource Background_Level2}" />

		<Setter Property="BorderThickness"
				Value="0" />
		<Setter Property="SnapsToDevicePixels"
				Value="True" />
		<Setter Property="FontFamily"
				Value="Calibri" />
		<Setter Property="OverridesDefaultStyle"
				Value="True" />
		<Setter Property="Grid.IsSharedSizeScope"
				Value="true" />
		<Setter Property="HasDropShadow"
				Value="True" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ContextMenu}">
					<Border Name="Border"
							CornerRadius="4"
							MinWidth="80"
							Background="{TemplateBinding Background}"
							BorderThickness="{TemplateBinding BorderThickness}">

						<StackPanel IsItemsHost="True"
									KeyboardNavigation.DirectionalNavigation="Cycle" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="HasDropShadow"
								 Value="true">
							<Setter TargetName="Border"
									Property="Padding"
									Value="0,3,0,3" />
							<Setter TargetName="Border"
									Property="CornerRadius"
									Value="4" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type ToolTip}">
		<Setter Property="OverridesDefaultStyle"
				Value="true" />
		<Setter Property="Background"
				Value="{StaticResource InflectBackground_Level1}" />
		<Setter Property="Foreground"
				Value="{StaticResource Background_Level2}" />
		<Setter Property="FontFamily"
				Value="Calibri" />
		<Setter Property="FontSize"
				Value="8" />
		<Setter Property="FontWeight"
				Value="Bold" />
		<Setter Property="BorderThickness"
				Value="0" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ToolTip">
					<Border Name="Border"
							CornerRadius="4"
							MinWidth="80"
							Background="{TemplateBinding Background}"
							BorderThickness="{TemplateBinding BorderThickness}">
						<ContentPresenter Margin="15,10"
										  HorizontalAlignment="Left"
										  VerticalAlignment="Center" />
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--ScrollViewer for a MenuItem-->
	<MenuScrollingVisibilityConverter x:Key="MenuScrollingVisibilityConverter" />

	<Style x:Key="MenuScrollViewer"
		   TargetType="{x:Type ScrollViewer}"
		   BasedOn="{x:Null}">
		<Setter Property="HorizontalScrollBarVisibility"
				Value="Hidden" />
		<Setter Property="VerticalScrollBarVisibility"
				Value="Auto" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ScrollViewer}">
					<Grid SnapsToDevicePixels="True">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition Height="*" />
							<RowDefinition Height="Auto" />
						</Grid.RowDefinitions>
						<Border Grid.Row="1"
								Grid.Column="0">
							<ScrollContentPresenter Margin="{TemplateBinding Padding}"
													CanContentScroll="{TemplateBinding CanContentScroll}" />
						</Border>
						<RepeatButton Grid.Row="0"
									  Grid.Column="0"
									  Command="{x:Static ScrollBar.LineUpCommand}"
									  CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
									  Focusable="False">
							<RepeatButton.Visibility>
								<MultiBinding FallbackValue="Visibility.Collapsed"
											  Converter="{StaticResource MenuScrollingVisibilityConverter}"
											  ConverterParameter="0">
									<Binding RelativeSource="{RelativeSource TemplatedParent}"
											 Path="ComputedVerticalScrollBarVisibility" />
									<Binding RelativeSource="{RelativeSource TemplatedParent}"
											 Path="VerticalOffset" />
									<Binding RelativeSource="{RelativeSource TemplatedParent}"
											 Path="ExtentHeight" />
									<Binding RelativeSource="{RelativeSource TemplatedParent}"
											 Path="ViewportHeight" />
								</MultiBinding>
							</RepeatButton.Visibility>
							<Path Fill="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" />
						</RepeatButton>
						<RepeatButton Grid.Row="2"
									  Grid.Column="0"
									  Command="{x:Static ScrollBar.LineDownCommand}"
									  CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
									  Focusable="False">
							<RepeatButton.Visibility>
								<MultiBinding FallbackValue="Visibility.Collapsed"
											  Converter="{StaticResource MenuScrollingVisibilityConverter}"
											  ConverterParameter="100">
									<Binding RelativeSource="{RelativeSource TemplatedParent}"
											 Path="ComputedVerticalScrollBarVisibility" />
									<Binding RelativeSource="{RelativeSource TemplatedParent}"
											 Path="VerticalOffset" />
									<Binding RelativeSource="{RelativeSource TemplatedParent}"
											 Path="ExtentHeight" />
									<Binding RelativeSource="{RelativeSource TemplatedParent}"
											 Path="ViewportHeight" />
								</MultiBinding>
							</RepeatButton.Visibility>
							<Path Fill="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" />
						</RepeatButton>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--Separator -->
	<Style x:Key="{x:Static MenuItem.SeparatorStyleKey}"
		   TargetType="{x:Type Separator}">
		<Setter Property="Height"
				Value="auto" />
		<Setter Property="Margin"
				Value="10,0,10,0" />
		<Setter Property="MinWidth"
				Value="200" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Separator}">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>
						<TextBlock FontSize="10"
								   Foreground="{DynamicResource Foreground_Level1}"
								   Text="{TemplateBinding Tag}"
								   Margin="0,0,5,0" />
						<Rectangle Fill="{StaticResource Foreground_Level1}"
								   Grid.Column="1"
								   Height="1" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>

		<Style.Triggers>
			<Trigger Property="Tag"
					 Value="{x:Null}">
				<Setter Property="MinWidth"
						Value="0" />
			</Trigger>
		</Style.Triggers>
	</Style>

	<!--Outer menu items-->
	<Style TargetType="{x:Type MenuItem}">
		<Setter Property="MinHeight"
				Value="30" />
		<Setter Property="MinWidth"
				Value="150" />
		<Setter Property="Foreground"
				Value="{StaticResource Background_Level2}" />
		<Setter Property="Background"
				Value="{StaticResource InflectBackground_Level1}" />
		<Style.Triggers>
			<Trigger Property="IsEnabled"
					 Value="False">
				<Setter Property="Foreground"
						Value="LightGray"></Setter>
			</Trigger>
		</Style.Triggers>
	</Style>

	<!-- TopLevelItem -->
	<ControlTemplate x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}"
					 TargetType="{x:Type MenuItem}">
		<Border x:Name="Border">
			<Grid>
				<ContentPresenter Margin="6,3,6,3"
								  ContentSource="Header"
								  RecognizesAccessKey="True" />
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="IsHighlighted"
					 Value="true">
				<Setter Property="Background"
						TargetName="Border"
						Value="Aqua" />
			</Trigger>
			<Trigger Property="IsEnabled"
					 Value="False">
				<Setter Property="Foreground"
						Value="Gray" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<!-- TopLevelHeader -->
	<ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}"
					 TargetType="{x:Type MenuItem}">
		<Border x:Name="Border">
			<Grid>
				<ContentPresenter Margin="6,3,6,3"
								  ContentSource="Header"
								  RecognizesAccessKey="True" />
				<Popup x:Name="Popup"
					   Placement="Bottom"
					   IsOpen="{TemplateBinding IsSubmenuOpen}"
					   AllowsTransparency="True"
					   Focusable="False"
					   PopupAnimation="Fade">
					<Border x:Name="SubmenuBorder"
							SnapsToDevicePixels="True"
							BorderThickness="1"
							Background="Aqua">
						<ScrollViewer CanContentScroll="True"
									  Style="{StaticResource MenuScrollViewer}">
							<StackPanel IsItemsHost="True"
										KeyboardNavigation.DirectionalNavigation="Cycle" />
						</ScrollViewer>
					</Border>
				</Popup>
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="IsSuspendingPopupAnimation"
					 Value="true">
				<Setter TargetName="Popup"
						Property="PopupAnimation"
						Value="None" />
			</Trigger>
			<Trigger Property="IsHighlighted"
					 Value="true">
				<Setter TargetName="Border"
						Property="BorderBrush"
						Value="Transparent" />
				<Setter Property="Background"
						TargetName="Border"
						Value="Green">

				</Setter>
			</Trigger>
			<Trigger SourceName="Popup"
					 Property="AllowsTransparency"
					 Value="True">
				<Setter TargetName="SubmenuBorder"
						Property="CornerRadius"
						Value="0,0,4,4" />
				<Setter TargetName="SubmenuBorder"
						Property="Padding"
						Value="0,0,0,3" />
			</Trigger>
			<Trigger Property="IsEnabled"
					 Value="False">
				<Setter Property="Foreground"
						Value="Black">

				</Setter>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<!-- SubmenuItem -->
	<ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}"
					 TargetType="{x:Type MenuItem}">
		<Border Name="Border">
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto"
									  SharedSizeGroup="Icon" />
					<ColumnDefinition Width="*" />
					<ColumnDefinition Width="Auto"
									  SharedSizeGroup="Shortcut" />
					<ColumnDefinition Width="13" />
				</Grid.ColumnDefinitions>
				<ContentPresenter Name="Icon"
								  Margin="6,0,6,0"
								  VerticalAlignment="Center"
								  ContentSource="Icon" />
				<Border Name="Check"
						Width="13"
						Height="13"
						Visibility="Collapsed"
						Margin="6,0,6,0"
						Background="Aqua"
						BorderThickness="1"
						BorderBrush="#5082a4">
					<Path Name="CheckMark"
						  Width="7"
						  Height="7"
						  Visibility="Hidden"
						  SnapsToDevicePixels="False"
						  Stroke="#5082a4"
						  StrokeThickness="2"
						  Data="M 0 0 L 7 7 M 0 7 L 7 0" />
				</Border>
				<ContentPresenter Name="HeaderHost"
								  Grid.Column="1"
								  VerticalAlignment="Center"
								  ContentSource="Header"
								  RecognizesAccessKey="True" />
				<TextBlock x:Name="InputGestureText"
						   Grid.Column="2"
						   Text="{TemplateBinding InputGestureText}"
						   Margin="5,2,0,2"
						   DockPanel.Dock="Right" />
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="Icon"
					 Value="{x:Null}">
				<Setter TargetName="Icon"
						Property="Visibility"
						Value="Hidden" />
			</Trigger>
			<Trigger Property="IsChecked"
					 Value="true">
				<Setter TargetName="CheckMark"
						Property="Visibility"
						Value="Visible" />
			</Trigger>
			<Trigger Property="IsCheckable"
					 Value="true">
				<Setter TargetName="Check"
						Property="Visibility"
						Value="Visible" />
				<Setter TargetName="Icon"
						Property="Visibility"
						Value="Hidden" />
			</Trigger>
			<Trigger Property="IsHighlighted"
					 Value="true">
				<Setter TargetName="Border"
						Property="Background"
						Value="{StaticResource MouseOverFillEffect_Level3}" />
			</Trigger>
			<Trigger Property="IsEnabled"
					 Value="false">
				<Setter Property="Foreground"
						Value="#0f3c5a" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<!-- SubmenuHeader -->
	<ControlTemplate x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}"
					 TargetType="{x:Type MenuItem}">
		<Border Name="Border">
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto"
									  SharedSizeGroup="Icon" />
					<ColumnDefinition Width="*" />
					<ColumnDefinition Width="Auto"
									  SharedSizeGroup="Shortcut" />
					<ColumnDefinition Width="13" />
				</Grid.ColumnDefinitions>
				<ContentPresenter Name="Icon"
								  Margin="5,0,15,0"
								  VerticalAlignment="Center"
								  ContentSource="Icon" />
				<TextBlock Name="HeaderHost"
						   Grid.Column="1"
						   FontWeight="Bold"
						   VerticalAlignment="Center"
						   Text="{TemplateBinding Header}" />
				<TextBlock x:Name="InputGestureText"
						   Grid.Column="2"
						   Text="{TemplateBinding InputGestureText}"
						   Margin="5,2,2,2"
						   VerticalAlignment="Center"
						   DockPanel.Dock="Right" />
				<Path Grid.Column="3"
					  Height="14"
					  Width="14"
					  Margin="0,0,4,0"
					  Stretch="Uniform"
					  HorizontalAlignment="Center"
					  VerticalAlignment="Center"
					  Data="{Binding Source={StaticResource ExpandContextMenuIcon}}"
					  Fill="{StaticResource Background_Level3}" />
				<Popup Name="Popup"
					   Placement="Right"
					   HorizontalOffset="-4"
					   IsOpen="{TemplateBinding IsSubmenuOpen}"
					   AllowsTransparency="True"
					   Focusable="False"
					   PopupAnimation="Fade">
					<Border Name="SubmenuBorder"
							SnapsToDevicePixels="True"
							Background="{TemplateBinding Background}">
						<StackPanel IsItemsHost="True"
									KeyboardNavigation.DirectionalNavigation="Cycle" />
					</Border>
				</Popup>
			</Grid>
		</Border>

		<ControlTemplate.Triggers>
			<Trigger Property="Icon"
					 Value="{x:Null}">
				<Setter TargetName="Icon"
						Property="Visibility"
						Value="Collapsed" />
			</Trigger>
			<Trigger Property="IsHighlighted"
					 Value="true">
				<Setter TargetName="Border"
						Property="Background"
						Value="{StaticResource MouseOverFillEffect_Level3}" />
			</Trigger>
			<Trigger SourceName="Popup"
					 Property="Popup.AllowsTransparency"
					 Value="True">
				<Setter TargetName="SubmenuBorder"
						Property="CornerRadius"
						Value="4" />
				<Setter TargetName="SubmenuBorder"
						Property="Padding"
						Value="0,3,0,3" />
			</Trigger>
			<Trigger Property="IsEnabled"
					 Value="false">
				<Setter Property="Foreground"
						Value="#0f3c5a" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>


</ResourceDictionary>