<lgWindow:LogGuardWindow x:Class="LogGuard_v0._1.Windows.WaitingWindow.WaitingBox"
						 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
						 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
						 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
						 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
						 xmlns:local="clr-namespace:LogGuard_v0._1.Windows.MessageWindow"
						 Background="{StaticResource Background_Level2}"
						 Style="{DynamicResource FloatingWindowStyle}"
						 xmlns:lgWindow="clr-namespace:LogGuard_v0._1.AppResources.Controls.LogGWindows"
						 mc:Ignorable="d"
						 ResizeMode="NoResize"
						 Title="Please wait!"
						 Padding="0"
						 SizeToContent="WidthAndHeight"
						 FontFamily="Calibri">
	<Window.Resources>
		<Style x:Key="{x:Type ResizeGrip}"
			   TargetType="{x:Type ResizeGrip}">
			<Setter Property="OverridesDefaultStyle"
					Value="true" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ResizeGrip}">
						<Border Background="Transparent"
								SnapsToDevicePixels="True"
								Width="16"
								Height="16">
							<Rectangle Margin="2">
								<Rectangle.Fill>
									<DrawingBrush Viewport="0,0,4,4"
												  ViewportUnits="Absolute"
												  Viewbox="0,0,8,8"
												  ViewboxUnits="Absolute"
												  TileMode="Tile">
										<DrawingBrush.Drawing>
											<DrawingGroup>
												<DrawingGroup.Children>
													<GeometryDrawing Brush="#FFE8EDF9"
																	 Geometry="M 4 4 L 4 8 L 
                                                 8 8 L 8 4 z" />
												</DrawingGroup.Children>
											</DrawingGroup>
										</DrawingBrush.Drawing>
									</DrawingBrush>
								</Rectangle.Fill>
							</Rectangle>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style TargetType="{x:Type Window}"
			   x:Key="FloatingWindowStyle">
			<Setter Property="AllowsTransparency"
					Value="True" />
			<Setter Property="Background"
					Value="Transparent" />
			<Setter Property="WindowStyle"
					Value="None" />
			<Setter Property="ResizeMode"
					Value="CanResize" />


			<Setter Property="WindowChrome.WindowChrome">
				<Setter.Value>
					<WindowChrome CaptionHeight="30" />
				</Setter.Value>
			</Setter>


			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Window}">

						<ControlTemplate.Resources>

							<!--Window control button-->
							<Style x:Key="WindowControlButton"
								   TargetType="{x:Type Button}">
								<Style.Triggers>
									<Trigger Property="IsMouseOver"
											 Value="True">
										<Setter Property="Foreground"
												Value="{StaticResource Foreground_Level3}" />
									</Trigger>
								</Style.Triggers>
								<Setter Property="WindowChrome.IsHitTestVisibleInChrome"
										Value="True" />
								<Setter Property="Background"
										Value="Transparent" />
								<Setter Property="Height"
										Value="30" />
								<Setter Property="Width"
										Value="30" />
								<Setter Property="VerticalAlignment"
										Value="Stretch" />
								<Setter Property="Foreground"
										Value="{StaticResource Foreground_Level2}" />
								<Setter Property="Template">
									<Setter.Value>
										<ControlTemplate TargetType="{x:Type Button}">
											<Border Background="{TemplateBinding Background}"
													Padding="{TemplateBinding Padding}"
													x:Name="MainBorder">
												<Path	x:Name="ContentPath"
														Width="8"
														Height="8"
														Fill="{TemplateBinding Foreground}"
														Data="{Binding Source={StaticResource CloseButton}}"
														Stretch="Uniform" />
											</Border>
											<ControlTemplate.Triggers>
												<Trigger Property="IsMouseOver"
														 Value="True">
													<Setter Property="Height"
															TargetName="ContentPath"
															Value="10" />
													<Setter Property="Width"
															TargetName="ContentPath"
															Value="10" />
													<Setter Property="Background"
															TargetName="MainBorder"
															Value="#4CEB2838" />
												</Trigger>

											</ControlTemplate.Triggers>
										</ControlTemplate>
									</Setter.Value>
								</Setter>


							</Style>


							<!--Window Maximize button-->
							<Style x:Key="WindowMaximizeButton"
								   BasedOn="{StaticResource WindowControlButton}"
								   TargetType="{x:Type Button}">
								<Style.Triggers>
									<DataTrigger Value="NoResize"
												 Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Path=ResizeMode}">
										<Setter Property="Visibility"
												Value="Collapsed" />
									</DataTrigger>

									<DataTrigger Value="CanResize"
												 Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Path=ResizeMode}">
										<Setter Property="Visibility"
												Value="Visible" />
									</DataTrigger>
								</Style.Triggers>
								<Setter Property="Template">
									<Setter.Value>
										<ControlTemplate TargetType="{x:Type Button}">
											<Border Background="{TemplateBinding Background}"
													Padding="{TemplateBinding Padding}"
													x:Name="MainBorder">
												<Path	x:Name="ContentPath"
														Width="8"
														Height="8"
														Fill="{TemplateBinding Foreground}"
														Data="{Binding Source={StaticResource MaximizeButton}}"
														Stretch="Uniform" />
											</Border>
											<ControlTemplate.Triggers>
												<Trigger Property="IsMouseOver"
														 Value="True">
													<Setter Property="Height"
															TargetName="ContentPath"
															Value="10" />
													<Setter Property="Width"
															TargetName="ContentPath"
															Value="10" />
													<Setter Property="Background"
															TargetName="MainBorder"
															Value="#4C989898" />
												</Trigger>
												<!--<MultiDataTrigger>
													<MultiDataTrigger.Conditions>
														<Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}, Path=IsMouseOver}"
																   Value="True" />
														<Condition Value="Normal"
																   Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Path=WindowState}" />
													</MultiDataTrigger.Conditions>
													<Setter Property="Data"
															TargetName="ContentPath"
															Value="{Binding Source={StaticResource MaximizeMouseOverButton}}" />
												</MultiDataTrigger>
												<MultiDataTrigger>
													<MultiDataTrigger.Conditions>
														<Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}, Path=IsMouseOver}"
																   Value="True" />
														<Condition Value="Maximized"
																   Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Path=WindowState}" />
													</MultiDataTrigger.Conditions>
													<Setter Property="Data"
															TargetName="ContentPath"
															Value="{Binding Source={StaticResource SmallmizeMouseOverButton}}" />
												</MultiDataTrigger>
												<DataTrigger Value="Maximized"
															 Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Path=WindowState}">
													<Setter Property="Data"
															TargetName="ContentPath"
															Value="{Binding Source={StaticResource SmallmizeButton}}" />
												</DataTrigger>-->
											</ControlTemplate.Triggers>
										</ControlTemplate>
									</Setter.Value>
								</Setter>
							</Style>

							<!--Window smallmize button-->
							<Style x:Key="WindowSmallmizeButton"
								   BasedOn="{StaticResource WindowControlButton}"
								   TargetType="{x:Type Button}">
								<Style.Triggers>
									<DataTrigger Value="NoResize"
												 Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Path=ResizeMode}">
										<Setter Property="Visibility"
												Value="Collapsed" />
									</DataTrigger>

									<DataTrigger Value="CanResize"
												 Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Path=ResizeMode}">
										<Setter Property="Visibility"
												Value="Visible" />
									</DataTrigger>
								</Style.Triggers>
								<Setter Property="Template">
									<Setter.Value>
										<ControlTemplate TargetType="{x:Type Button}">
											<Border Background="{TemplateBinding Background}"
													Padding="{TemplateBinding Padding}"
													x:Name="MainBorder">
												<Path	x:Name="ContentPath"
														Width="8"
														Height="8"
														Fill="{TemplateBinding Foreground}"
														Data="{Binding Source={StaticResource SmallmizeButton}}"
														Stretch="Uniform" />
											</Border>
											<ControlTemplate.Triggers>
												<Trigger Property="IsMouseOver"
														 Value="True">
													<Setter Property="Height"
															TargetName="ContentPath"
															Value="10" />
													<Setter Property="Width"
															TargetName="ContentPath"
															Value="10" />
													<Setter Property="Background"
															TargetName="MainBorder"
															Value="#4C989898" />
												</Trigger>
											</ControlTemplate.Triggers>
										</ControlTemplate>
									</Setter.Value>
								</Setter>
							</Style>

							<!-- Window Minimize Button -->
							<Style x:Key="WindowMinimizeButton"
								   BasedOn="{StaticResource WindowControlButton}"
								   TargetType="{x:Type Button}">
								<Setter Property="Template">
									<Setter.Value>
										<ControlTemplate TargetType="{x:Type Button}">
											<Border x:Name="MainBorder"
													Background="{TemplateBinding Background}"
													Padding="{TemplateBinding Padding}">
												<Path	x:Name="ContentPath"
														Width="8"
														Height="8"
														Fill="{TemplateBinding Foreground}"
														Data="{Binding Source={StaticResource MinimizeButton}}"
														Stretch="Uniform" />
											</Border>
											<ControlTemplate.Triggers>
												<Trigger Property="IsMouseOver"
														 Value="True">
													<Setter Property="Height"
															TargetName="ContentPath"
															Value="10" />
													<Setter Property="Width"
															TargetName="ContentPath"
															Value="10" />
													<Setter Property="Background"
															TargetName="MainBorder"
															Value="#4C989898" />
												</Trigger>
											</ControlTemplate.Triggers>
										</ControlTemplate>
									</Setter.Value>
								</Setter>
							</Style>

						</ControlTemplate.Resources>

						<Border x:Name="MainBorderContainer"
								CornerRadius="30"
								Width="{TemplateBinding Width}"
								Height="{TemplateBinding Height}">

							<Border.LayoutTransform>
								<ScaleTransform x:Name="MainBorderCtn_ScaleTransform"
												ScaleX="1"
												ScaleY="1" />
							</Border.LayoutTransform>
							<Border.OpacityMask>
								<VisualBrush Visual="{Binding ElementName=RecMask}" />
							</Border.OpacityMask>
							<!--Content and title bar field-->
							<Grid x:Name="ContentAndTitleGrid"
								  Grid.Column="1">
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto" />
									<RowDefinition Height="*" />
								</Grid.RowDefinitions>
								<Rectangle x:Name="RecMask"
										   Fill="{TemplateBinding Background}"
										   RadiusX="0"
										   RadiusY="0"
										   Grid.RowSpan="2" />

								<!--Title bar-->
								<Grid x:Name="TitleBartGrid"
									  Grid.Row="0"
									  Height="30"
									  VerticalAlignment="Stretch"
									  Background="Transparent"
									  WindowChrome.IsHitTestVisibleInChrome="False">

									<Grid.ColumnDefinitions>
										<!--Title-->
										<ColumnDefinition Width="*" />
										<!--Windows Button-->
										<ColumnDefinition Width="Auto" />

									</Grid.ColumnDefinitions>

									<!--Title-->
									<Viewbox x:Name="TitleViewBox"
											 Grid.Column="0"
											 HorizontalAlignment="Left"
											 Grid.ColumnSpan="3"
											 Margin="20,8,8,8">
										<TextBlock x:Name="SubContentTitleText"
												   Foreground="{StaticResource Foreground_Level2}"
												   Text="{TemplateBinding Title}"
												   TextAlignment="Center" />
									</Viewbox>

									<!--Window Buttons-->
									<StackPanel x:Name="WindowControlPanel"
												Grid.Column="1"
												Orientation="Horizontal">

										<Button x:Name="MinimizeButton"
												Style="{StaticResource WindowMinimizeButton}" />
										<Button x:Name="SmallmizeButton"
												Style="{StaticResource WindowSmallmizeButton}" />
										<Button x:Name="MaximizeButton"
												Style="{StaticResource WindowMaximizeButton}" />
										<Button x:Name="CloseButton"
												Style="{StaticResource WindowControlButton}" />
									</StackPanel>

								</Grid>

								<!--Content field-->
								<ContentPresenter x:Name="DWContentPresenter"
												  Grid.Row="1"
												  Content="{TemplateBinding Content}"
												  Visibility="Visible">
								</ContentPresenter>
							</Grid>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="WindowState"
									 Value="Maximized">
								<Setter TargetName="MaximizeButton"
										Property="Visibility"
										Value="Collapsed" />
							</Trigger>

							<Trigger Property="WindowState"
									 Value="Normal">
								<Setter TargetName="SmallmizeButton"
										Property="Visibility"
										Value="Collapsed" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

	</Window.Resources>
	<Grid Background="{StaticResource Background_Level3}"
		  Width="auto"
		  Margin="5,0,5,5"
		  x:Name="MainGrid"
		  Height="auto">
		<Grid.RowDefinitions>
			<RowDefinition Height="30" />
			<RowDefinition Height="Auto" />
			<RowDefinition Height="40" />
			<RowDefinition Height="Auto" />
		</Grid.RowDefinitions>
		<StackPanel Orientation="Horizontal"
					Grid.Row="1"
					Margin="0,0,5,0">
			<Path x:Name="CancelIconPath"
				  Fill="{StaticResource Foreground_Level2}"
				  Data="{Binding Source={StaticResource CancelIcon}}"
				  Height="35"
				  Width="35"
				  Visibility="Collapsed"
				  Margin="20,0,20,0"
				  Stretch="Uniform">
			</Path>
			<Path x:Name="IconPath"
				  Fill="{StaticResource Foreground_Level2}"
				  RenderTransformOrigin="0.5,0.5"
				  Data="{Binding Source={StaticResource WaitingIcon}}"
				  Height="35"
				  Width="35"
				  Margin="20,0,20,0"
				  Stretch="Uniform">
				<Path.RenderTransform>
					<RotateTransform x:Name="MyAnimatedTransform"
									 Angle="0" />
				</Path.RenderTransform>
			</Path>
			<Label x:Name="MainContent"
				   Foreground="White"
				   MinWidth="200"
				   MinHeight="50"
				   VerticalContentAlignment="Center"
				   Content="Resource not available!" />
		</StackPanel>
		<StackPanel Orientation="Horizontal"
					HorizontalAlignment="Right"
					Margin="0,0,5,10"
					Grid.Row="3">

			<Button x:Name="cancelBtn"
					Height="24"
					Content="Cancel"
					Foreground="{StaticResource Foreground_Level3}"
					Background="{StaticResource ButtonBackground_Level2}"
					Template="{StaticResource RecBtnTmpl}"
					Margin="5,0,0,0"
					Padding="10,0,10,0" />
			<Button x:Name="ContinueBtn"
					Height="24"
					Foreground="{StaticResource Foreground_Level3}"
					Template="{StaticResource RecBtnTmpl}"
					Background="{StaticResource ButtonBackground_Level1}"
					Content="Continue"
					Margin="5,0,0,0"
					Padding="10,0,10,0" />

		</StackPanel>

		<Grid.Triggers>
			<EventTrigger RoutedEvent="Grid.Loaded">
				<BeginStoryboard x:Name="WatingStoryBoard">
					<Storyboard RepeatBehavior="Forever">
						<DoubleAnimation Storyboard.TargetName="MyAnimatedTransform"
										 Storyboard.TargetProperty="(RotateTransform.Angle)"
										 From="0.0"
										 To="360"
										 Duration="0:0:2" />
					</Storyboard>
				</BeginStoryboard>
			</EventTrigger>

			<EventTrigger RoutedEvent="Button.Click"
						  SourceName="cancelBtn">
				<StopStoryboard BeginStoryboardName="WatingStoryBoard" />
			</EventTrigger>
			
		</Grid.Triggers>
	</Grid>
</lgWindow:LogGuardWindow>
