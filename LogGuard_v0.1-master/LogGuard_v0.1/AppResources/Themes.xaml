<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:logwatcher_ctrl="clr-namespace:LogGuard_v0._1.LogGuard.Control"
					xmlns:sys="clr-namespace:System;assembly=mscorlib"
					xmlns:attPTB="clr-namespace:LogGuard_v0._1.AppResources.AttachedProperties"
					xmlns:loadingAnim="clr-namespace:LogGuard_v0._1.AppResources.Controls.Animations.Loading"
					xmlns:hpss="clr-namespace:HPSolutionCCDevPackage.netFramework;assembly=HPSolutionCCDevPackage.netFramework">

	<ControlTemplate TargetType="{x:Type Button}"
					 x:Key="CircleBtnTmpl">
		<Grid>
			<Ellipse Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}, Path=ActualHeight}"
					 Fill="{TemplateBinding Background}"
					 StrokeThickness="0"
					 Stroke="{TemplateBinding BorderBrush}"
					 x:Name="ClipCircle"
					 HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
					 VerticalAlignment="{TemplateBinding VerticalAlignment}" />
			<Ellipse Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}, Path=ActualHeight}"
					 StrokeThickness="2"
					 Fill="#19B8E7F9"
					 Stroke="#FFB8EAF9"
					 x:Name="FeedBackElp"
					 Visibility="Hidden"
					 HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
					 VerticalAlignment="{TemplateBinding VerticalAlignment}" />
			<ContentPresenter Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}, Path=ActualHeight}"
							  Content="{TemplateBinding Content}"
							  HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
							  VerticalAlignment="{TemplateBinding VerticalAlignment}">

			</ContentPresenter>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsMouseOver"
					 Value="True">
				<Setter Property="Visibility"
						TargetName="FeedBackElp"
						Value="Visible" />
			</Trigger>

			<Trigger Property="IsPressed"
					 Value="True">
				<Setter Property="Visibility"
						TargetName="FeedBackElp"
						Value="Visible" />
				<Setter Property="Fill"
						TargetName="FeedBackElp"
						Value="#AAB8E7F9" />
			</Trigger>

		</ControlTemplate.Triggers>
	</ControlTemplate>

	<ControlTemplate TargetType="{x:Type Button}"
					 x:Key="RecBtnTmpl">
		<Grid>
			<Rectangle Fill="{TemplateBinding Background}"
					   StrokeThickness="0"
					   Stroke="{TemplateBinding BorderBrush}"
					   x:Name="ClipRec" />
			<Rectangle StrokeThickness="1"
					   Fill="#19B8E7F9"
					   Stroke="#FFB8EAF9"
					   x:Name="FeedBackRec"
					   Visibility="Hidden" />
			<ContentPresenter Margin="{TemplateBinding Padding}"
							  Content="{TemplateBinding Content}"
							  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							  VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
				<ContentPresenter.OpacityMask>
					<VisualBrush Visual="{Binding ElementName=ClipRec}" />
				</ContentPresenter.OpacityMask>
			</ContentPresenter>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsMouseOver"
					 Value="True">
				<Setter Property="Visibility"
						TargetName="FeedBackRec"
						Value="Visible" />
			</Trigger>

			<Trigger Property="IsPressed"
					 Value="True">
				<Setter Property="Visibility"
						TargetName="FeedBackRec"
						Value="Visible" />
				<Setter Property="Fill"
						TargetName="FeedBackRec"
						Value="#AAB8E7F9" />
			</Trigger>

		</ControlTemplate.Triggers>
	</ControlTemplate>


	<ControlTemplate TargetType="CheckBox"
					 x:Key="ColorCheckBoxTmpl">
		<Grid>
			<Ellipse x:Name="FeedbackElp"
					 Visibility="Hidden"
					 Fill="#AAB8E7F9" />
			<Ellipse x:Name="FillElp"
					 Visibility="Hidden"
					 Fill="{TemplateBinding Background}" />
			<Ellipse x:Name="MainElp"
					 Stroke="{TemplateBinding BorderBrush}" />
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsMouseOver"
					 Value="True">
				<Setter Property="Visibility"
						TargetName="FeedbackElp"
						Value="Visible" />
				<Setter Property="Cursor"
						Value="Hand" />
			</Trigger>

			<Trigger Property="IsChecked"
					 Value="True">
				<Setter Property="Visibility"
						TargetName="FillElp"
						Value="Visible" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<ControlTemplate TargetType="CheckBox"
					 x:Key="RoundCheckBoxTmpl">
		<Border Height="11"
				Width="11"
				CornerRadius="2"
				Background="{TemplateBinding Background}">
			<Grid>
				<Rectangle x:Name="FeedbackRec"
						   RadiusX="2"
						   RadiusY="2"
						   Visibility="Hidden"
						   Fill="#19B8E7F9"
						   Stroke="#FFB8EAF9" />
				<Path x:Name="CheckPath"
					  Fill="{StaticResource Foreground_Level3}"
					  Stretch="Uniform"
					  Margin="1"
					  Visibility="Hidden"
					  Data="{Binding Source={StaticResource CheckPathGeomerty}}" />
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="IsMouseOver"
					 Value="True">
				<Setter Property="Visibility"
						TargetName="FeedbackRec"
						Value="Visible" />
			</Trigger>

			<Trigger Property="IsChecked"
					 Value="True">
				<Setter Property="Visibility"
						TargetName="CheckPath"
						Value="Visible" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<!--		Search text box style
	
	This style for text box use search function
	also support for multi engine of search
	
	==========================================================-->
	<ControlTemplate TargetType="{x:Type TextBox}"
					 x:Key="SearchTextBoxTmpl">
		<Grid Name="Border">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*" />
				<ColumnDefinition Width="auto" />
				<ColumnDefinition Width="auto" />
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
				<RowDefinition Height="*" />
				<RowDefinition Height="2" />
				<RowDefinition Height="5" />
			</Grid.RowDefinitions>

			<Rectangle x:Name="BackgroundRec"
					   Grid.Column="0"
					   Grid.ColumnSpan="3"
					   Fill="{TemplateBinding Background}"
					   StrokeThickness="0" />

			<ScrollViewer Margin="5,0,0,0"
						  VerticalContentAlignment="Center"
						  VerticalAlignment="Center"
						  VerticalScrollBarVisibility="Disabled"
						  HorizontalScrollBarVisibility="Disabled"
						  x:Name="PART_ContentHost" />

			<TextBlock x:Name="TagTextBox"
					   Margin="7,0,0,0"
					   Text="{TemplateBinding Tag}"
					   Background="Transparent"
					   VerticalAlignment="Center"
					   IsHitTestVisible="False"
					   Foreground="{StaticResource Foreground_Level1}"
					   FontSize="{TemplateBinding FontSize}">
				<TextBlock.Style>
					<Style TargetType="{x:Type TextBlock}">
						<Setter Property="Visibility"
								Value="Collapsed" />
						<Style.Triggers>
							<DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}"
										 Value="">
								<Setter Property="Visibility"
										Value="Visible" />
							</DataTrigger>
						</Style.Triggers>
					</Style>
				</TextBlock.Style>
			</TextBlock>

			<Path x:Name="CheckPath"
				  Stretch="Uniform"
				  Grid.Column="1"
				  Height="10"
				  IsHitTestVisible="False"
				  Width="10"
				  Fill="{StaticResource Foreground_Level2}" />

			<Path x:Name="FilterPath"
				  Stretch="Uniform"
				  Grid.Column="2"
				  Height="10"
				  IsHitTestVisible="False"
				  Data="{Binding Source={StaticResource FilterEnableIcon}}"
				  Width="10"
				  Fill="{StaticResource Foreground_Level2}" />

			<Rectangle x:Name="FeedbackCheckPathRec"
					   Grid.Column="1"
					   Fill="Transparent"
					   StrokeThickness="1"
					   RadiusX="10"
					   RadiusY="10"
					   Width="20"
					   ToolTip="{Binding Path=(attPTB:TextBoxAttProperties.EngineHelperContent),
									RelativeSource={RelativeSource TemplatedParent}}"
					   Height="20">
				<Rectangle.InputBindings>
					<MouseBinding Command="{Binding Path=(attPTB:TextBoxAttProperties.EngineLeftDoubleClickCommand),
									RelativeSource={RelativeSource TemplatedParent}}"
								  MouseAction="LeftDoubleClick" />
					<MouseBinding Command="{Binding Path=(attPTB:TextBoxAttProperties.EngineLeftClickCommand),
									RelativeSource={RelativeSource TemplatedParent}}"
								  MouseAction="LeftClick" />
					<MouseBinding Command="{Binding Path=(attPTB:TextBoxAttProperties.EngineRightClickCommand),
									RelativeSource={RelativeSource TemplatedParent}}"
								  MouseAction="RightClick" />
				</Rectangle.InputBindings>
				<Rectangle.Style>
					<Style>
						<Style.Triggers>
							<Trigger Property="Rectangle.IsMouseOver"
									 Value="True">
								<Setter Property="Rectangle.Fill"
										Value="#19B8E7F9" />
								<Setter Property="Rectangle.Stroke"
										Value="{StaticResource BorderbrushEffect_Level1}" />
							</Trigger>
						</Style.Triggers>
					</Style>
				</Rectangle.Style>
			</Rectangle>

			<Rectangle x:Name="FeedbackFilterPathRec"
					   Grid.Column="2"
					   Fill="Transparent"
					   StrokeThickness="1"
					   RadiusX="10"
					   RadiusY="10"
					   Width="20"
					   ToolTip="{Binding Path=(attPTB:TextBoxAttProperties.FilterHelperContent),
									RelativeSource={RelativeSource TemplatedParent}}"
					   Height="20">
				<Rectangle.InputBindings>
					<MouseBinding Command="{Binding Path=(attPTB:TextBoxAttProperties.FilterLeftDoubleClickCommand),
									RelativeSource={RelativeSource TemplatedParent}}"
								  MouseAction="LeftDoubleClick" />
					<MouseBinding Command="{Binding Path=(attPTB:TextBoxAttProperties.FilterLeftClickCommand),
									RelativeSource={RelativeSource TemplatedParent}}"
								  MouseAction="LeftClick" />
					<MouseBinding Command="{Binding Path=(attPTB:TextBoxAttProperties.FilterRightClickCommand),
									RelativeSource={RelativeSource TemplatedParent}}"
								  MouseAction="RightClick" />
				</Rectangle.InputBindings>
				<Rectangle.Style>
					<Style>
						<Style.Triggers>
							<Trigger Property="Rectangle.IsMouseOver"
									 Value="True">
								<Setter Property="Rectangle.Fill"
										Value="#19B8E7F9" />
								<Setter Property="Rectangle.Stroke"
										Value="{StaticResource BorderbrushEffect_Level1}" />
							</Trigger>
						</Style.Triggers>
					</Style>
				</Rectangle.Style>
			</Rectangle>

			<loadingAnim:LoadingAnimation Grid.Row="2"
										  Grid.ColumnSpan="3"
										  HorizontalAlignment="Left"
										  IsBusy="{Binding Path=(attPTB:TextBoxAttProperties.IsBusy),
														   RelativeSource={RelativeSource TemplatedParent}}" />
		</Grid>

		<ControlTemplate.Triggers>
			<DataTrigger Binding="{Binding Path=(attPTB:TextBoxAttProperties.IsFilterEnable),
									RelativeSource={RelativeSource Self}}"
						 Value="true">
				<Setter TargetName="FilterPath"
						Property="Fill"
						Value="{StaticResource ButtonBackground_Level1}" />
			</DataTrigger>

			<DataTrigger Binding="{Binding Path=(attPTB:TextBoxAttProperties.Filter),
									RelativeSource={RelativeSource Self}}"
						 Value="Simple">
				<Setter TargetName="CheckPath"
						Property="Data"
						Value="{Binding Source={StaticResource SearchPathGeomerty}}" />
			</DataTrigger>

			<DataTrigger Binding="{Binding Path=(attPTB:TextBoxAttProperties.Filter),
									RelativeSource={RelativeSource Self}}"
						 Value="Syntax">
				<Setter TargetName="CheckPath"
						Property="Data"
						Value="{Binding Source={StaticResource SyntaxIconPathGeomerty}}" />
			</DataTrigger>

			<DataTrigger Binding="{Binding Path=(attPTB:TextBoxAttProperties.Filter),
									RelativeSource={RelativeSource Self}}"
						 Value="Advance">
				<Setter TargetName="CheckPath"
						Property="Data"
						Value="{Binding Source={StaticResource AdvanceSearchIconPathGeomerty}}" />
			</DataTrigger>

			<DataTrigger Binding="{Binding Path=(attPTB:TextBoxAttProperties.IsSupportMultiFilterEngine),
									RelativeSource={RelativeSource Self}}"
						 Value="False">
				<Setter TargetName="CheckPath"
						Property="Visibility"
						Value="Collapsed" />
				<Setter TargetName="FeedbackCheckPathRec"
						Property="Visibility"
						Value="Collapsed" />

			</DataTrigger>

			<DataTrigger Binding="{Binding Path=(attPTB:TextBoxAttProperties.IsFilterTextBox),
									RelativeSource={RelativeSource Self}}"
						 Value="False">
				<Setter TargetName="FilterPath"
						Property="Visibility"
						Value="Collapsed" />
				<Setter TargetName="FeedbackFilterPathRec"
						Property="Visibility"
						Value="Collapsed" />

			</DataTrigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>


	<!--		Calendar text box style
	
	This style for text box use to pick date time function
	
	==========================================================-->
	<ControlTemplate TargetType="{x:Type TextBox}"
					 x:Key="CalendarTextBoxTmpl">

		<Grid Name="Border">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*" />
				<ColumnDefinition Width="auto" />
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
				<RowDefinition Height="*" />
				<RowDefinition Height="2" />
				<RowDefinition Height="5" />
			</Grid.RowDefinitions>

			<Rectangle x:Name="BackgroundRec"
					   Grid.Column="0"
					   Grid.ColumnSpan="2"
					   Fill="{TemplateBinding Background}"
					   StrokeThickness="0" />

			<ScrollViewer Margin="5,0,0,0"
						  VerticalContentAlignment="Center"
						  VerticalAlignment="Center"
						  VerticalScrollBarVisibility="Disabled"
						  HorizontalScrollBarVisibility="Disabled"
						  x:Name="PART_ContentHost" />
			<TextBlock x:Name="TagTextBox"
					   Margin="7,0,0,0"
					   Text="{TemplateBinding Tag}"
					   Background="Transparent"
					   VerticalAlignment="Center"
					   IsHitTestVisible="False"
					   Foreground="{StaticResource Foreground_Level1}"
					   FontSize="{TemplateBinding FontSize}">
				<TextBlock.Style>
					<Style TargetType="{x:Type TextBlock}">
						<Setter Property="Visibility"
								Value="Collapsed" />
						<Style.Triggers>
							<DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}"
										 Value="">
								<Setter Property="Visibility"
										Value="Visible" />
							</DataTrigger>
						</Style.Triggers>
					</Style>
				</TextBlock.Style>
			</TextBlock>

			<Path x:Name="CheckPath"
				  Stretch="Uniform"
				  Grid.Column="1"
				  Height="10"
				  IsHitTestVisible="False"
				  Width="10"
				  Data="{Binding Source={StaticResource CalendarPathGeomerty}}"
				  Fill="{StaticResource Foreground_Level2}" />


			<Rectangle Grid.Column="1"
					   Fill="Transparent"
					   StrokeThickness="1"
					   RadiusX="10"
					   RadiusY="10"
					   Width="20"
					   ToolTip="{Binding Path=(attPTB:TextBoxAttProperties.FilterHelperContent),
									RelativeSource={RelativeSource TemplatedParent}}"
					   Height="20">
				<Rectangle.InputBindings>
					<MouseBinding Command="{Binding Path=(attPTB:TextBoxAttProperties.FilterLeftDoubleClickCommand),
									RelativeSource={RelativeSource TemplatedParent}}"
								  MouseAction="LeftDoubleClick" />
					<MouseBinding Command="{Binding Path=(attPTB:TextBoxAttProperties.FilterLeftClickCommand),
									RelativeSource={RelativeSource TemplatedParent}}"
								  MouseAction="LeftClick" />
					<MouseBinding Command="{Binding Path=(attPTB:TextBoxAttProperties.FilterRightClickCommand),
									RelativeSource={RelativeSource TemplatedParent}}"
								  MouseAction="RightClick" />
				</Rectangle.InputBindings>
				<Rectangle.Style>
					<Style>
						<Style.Triggers>
							<Trigger Property="Rectangle.IsMouseOver"
									 Value="True">
								<Setter Property="Rectangle.Fill"
										Value="#19B8E7F9" />
								<Setter Property="Rectangle.Stroke"
										Value="{StaticResource BorderbrushEffect_Level1}" />
							</Trigger>
						</Style.Triggers>
					</Style>
				</Rectangle.Style>
			</Rectangle>

			<loadingAnim:LoadingAnimation Grid.Row="2"
										  Grid.ColumnSpan="3"
										  HorizontalAlignment="Left"
										  IsBusy="{Binding Path=(attPTB:TextBoxAttProperties.IsBusy),
														   RelativeSource={RelativeSource TemplatedParent}}" />

			<Popup x:Name="PART_Popup"
				   Placement="MousePoint"
				   StaysOpen="False"
				   Focusable="False"
				   AllowsTransparency="True"
				   PopupAnimation="Slide">
			</Popup>
		</Grid>
		<ControlTemplate.Triggers>
			<DataTrigger Binding="{Binding Path=(attPTB:TextBoxAttProperties.IsFilterEnable),
									RelativeSource={RelativeSource Self}}"
						 Value="true">
				<Setter TargetName="CheckPath"
						Property="Fill"
						Value="{StaticResource ButtonBackground_Level1}" />
			</DataTrigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>


	<ControlTemplate TargetType="ListView"
					 x:Key="ListViewLV1Tmpl">
		<ControlTemplate.Resources>
			<sys:Double x:Key="{x:Static SystemParameters.VerticalScrollBarWidthKey}">6</sys:Double>
			<sys:Double x:Key="{x:Static SystemParameters.HorizontalScrollBarHeightKey}">0</sys:Double>

		</ControlTemplate.Resources>
		<Border Name="Border"
				Background="{TemplateBinding Background}">

			<logwatcher_ctrl:ScrollViewWatcher Focusable="False"
											   CanContentScroll="True"
											   Style="{StaticResource HanzaScrollViewWatcherStyle}"
											   Background="Transparent"
											   ScrollHeaderHeight="0"
											   ThumbBackground="#009a76"
											   ScrollBarBackground="Transparent">
				<ItemsPresenter />
			</logwatcher_ctrl:ScrollViewWatcher>
		</Border>

	</ControlTemplate>

	<ControlTemplate TargetType="ListView"
					 x:Key="ListViewLV2Tmpl">
		<ControlTemplate.Resources>
			<sys:Double x:Key="{x:Static SystemParameters.VerticalScrollBarWidthKey}">6</sys:Double>
			<sys:Double x:Key="{x:Static SystemParameters.HorizontalScrollBarHeightKey}">6</sys:Double>

		</ControlTemplate.Resources>
		<Border Name="Border"
				Background="{TemplateBinding Background}">

			<logwatcher_ctrl:ScrollViewWatcher Background="Transparent"
											   ScrollHeaderHeight="0"
											   Style="{StaticResource HanzaScrollViewWatcherStyle}"
											   ThumbBackground="{StaticResource ButtonBackground_Level1}"
											   ScrollBarBackground="Transparent">
				<ItemsPresenter />
			</logwatcher_ctrl:ScrollViewWatcher>
		</Border>

	</ControlTemplate>

	<ControlTemplate TargetType="{x:Type hpss:HorusBox}"
					 x:Key="CustomHorusBox">

		<!--Horus box resource-->
		<ControlTemplate.Resources>
			<sys:Double x:Key="{x:Static SystemParameters.VerticalScrollBarWidthKey}">6</sys:Double>
			<sys:Double x:Key="{x:Static SystemParameters.HorizontalScrollBarHeightKey}">0</sys:Double>

			<Style TargetType="{x:Type TextBox}"
				   x:Key="HorusTextBox">
				<Setter Property="VerticalContentAlignment"
						Value="Center" />
				<Setter Property="BorderBrush"
						Value="#FF000000" />
				<Setter Property="BorderThickness"
						Value="1" />
				<Setter Property="Background"
						Value="White" />
				<Setter Property="Foreground"
						Value="#FF000000" />

				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type TextBoxBase}">
							<Grid>

								<Border x:Name="border"
										BorderBrush="{TemplateBinding BorderBrush}"
										BorderThickness="{TemplateBinding BorderThickness}"
										Background="{TemplateBinding Background}"
										SnapsToDevicePixels="True">
									<ScrollViewer x:Name="PART_ContentHost"
												  Focusable="False"
												  HorizontalScrollBarVisibility="Hidden"
												  VerticalScrollBarVisibility="Hidden" />
								</Border>

								<TextBox IsHitTestVisible="False"
										 Text="{TemplateBinding Tag}"
										 x:Name="placeholder"
										 FontFamily="{TemplateBinding FontFamily}"
										 Padding="{TemplateBinding Padding}"
										 VerticalAlignment="Center"
										 IsReadOnly="True"
										 Background="Transparent"
										 BorderThickness="0"
										 HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
										 Foreground="#AA000000">
									<TextBox.Style>
										<Style TargetType="{x:Type TextBox}">
											<Setter Property="Visibility"
													Value="Collapsed" />

											<Style.Triggers>
												<DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}"
															 Value="">
													<Setter Property="Visibility"
															Value="Visible" />
												</DataTrigger>
											</Style.Triggers>
										</Style>
									</TextBox.Style>
								</TextBox>
							</Grid>
						</ControlTemplate>
					</Setter.Value>
				</Setter>

				<Style.Triggers>
					<Trigger Property="IsEnabled"
							 Value="False">
						<Setter Property="BorderBrush"
								Value="#FF9A9A9A" />
						<Setter Property="Foreground"
								Value="#FF9A9A9A" />
					</Trigger>
					<Trigger Property="IsMouseOver"
							 Value="True">
						<Setter Property="BorderBrush"
								Value="#FF81D5FA" />
					</Trigger>
					<Trigger Property="IsKeyboardFocused"
							 Value="True">
						<Setter Property="BorderBrush"
								Value="#FF81D5FA" />
					</Trigger>
				</Style.Triggers>

			</Style>

			<Style x:Key="ComboBoxToggleButton"
				   TargetType="{x:Type ToggleButton}">
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="ToggleButton">
							<Grid DataContext="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                                            AncestorType={x:Type hpss:HorusBox}}}">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*" />
									<ColumnDefinition Width="Auto" />
								</Grid.ColumnDefinitions>
								<Border Grid.Column="0"
										Height="{Binding ContentAreaHeight}"
										Width="{Binding ContentAreaWidth}"
										CornerRadius="{Binding HorusCornerRadius}"
										Background="{Binding Background}"
										BorderBrush="{Binding BorderBrush}"
										BorderThickness="{Binding BorderThickness}" />

								<Border x:Name="DropDownBD"
										Grid.Column="1"
										Width="{Binding DropDownAreaWidth}"
										Height="{Binding DropDownAreaHeight}"
										CornerRadius="{Binding DropDownCornerRadius}"
										Background="{Binding DropDownButtonBackground}"
										BorderBrush="{Binding DropDownBorderBrush}"
										BorderThickness="{Binding DropDownBorderThickness}">
									<Grid>
										<Image Visibility="Visible"
											   Stretch="Uniform"
											   Source="{Binding DropDownIcon}"
											   Height="{Binding IconHeight}"
											   Width="{Binding IconWidth}">
										</Image>
										<Path Visibility="Hidden"
											  x:Name="Arrow"
											  Fill="White"
											  HorizontalAlignment="Center"
											  VerticalAlignment="Center"
											  Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z" />
									</Grid>
								</Border>
							</Grid>
							<ControlTemplate.Triggers>
								<DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                                            AncestorType={x:Type hpss:HorusBox}},Path=DropDownIcon}"
											 Value="{x:Null}">
									<Setter Property="Visibility"
											TargetName="Arrow"
											Value="Visible" />
								</DataTrigger>
								<DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                                            AncestorType={x:Type hpss:HorusBox}},Path=RemoveDropDownIcon}"
											 Value="True">
									<Setter Property="Visibility"
											TargetName="DropDownBD"
											Value="Collapsed" />
								</DataTrigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
		</ControlTemplate.Resources>

		<!--Horus box template-->
		<Grid DataContext="{Binding RelativeSource={RelativeSource AncestorType={x:Type hpss:HorusBox}}}"
			  HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
			  VerticalAlignment="{TemplateBinding VerticalAlignment}"
			  Height="{TemplateBinding Height}"
			  Width="{TemplateBinding Width}">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="{Binding ContentAreaWidth}" />
				<ColumnDefinition Width="{Binding DropDownAreaWidth}" />
			</Grid.ColumnDefinitions>

			<ToggleButton Grid.Column="0"
						  Grid.ColumnSpan="2"
						  Name="ToggleButton"
						  Focusable="False"
						  Style="{StaticResource ComboBoxToggleButton}"
						  IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
						  ClickMode="Press">
			</ToggleButton>

			<Border Grid.Column="0"
					CornerRadius="{Binding HorusCornerRadius}"
					BorderBrush="Transparent"
					BorderThickness="{Binding BorderThickness}"
					Height="{Binding ContentAreaHeight}"
					Width="{Binding ContentAreaWidth}">
				<Grid>

					<ScrollViewer x:Name="contentPresenter"
								  HorizontalScrollBarVisibility="Hidden"
								  VerticalScrollBarVisibility="Hidden"
								  ContentTemplate="{TemplateBinding SelectionHorusBoxItemTemplate}"
								  Content="{Binding SelectionBoxItem}"
								  ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
								  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								  Visibility="Collapsed"
								  IsHitTestVisible="False"
								  Margin="{TemplateBinding Padding}"
								  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
								  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />

					<ScrollViewer x:Name="CustomPresenterWhenUseEditable"
								  HorizontalScrollBarVisibility="Hidden"
								  VerticalScrollBarVisibility="Hidden"
								  ContentTemplate="{TemplateBinding SelectionHorusBoxItemTemplate}"
								  Content="{Binding SelectionHorusBoxItem}"
								  ContentStringFormat="{TemplateBinding SelectionHorusBoxItemStringFormat}"
								  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								  IsHitTestVisible="False"
								  Visibility="Collapsed"
								  Margin="{TemplateBinding Padding}"
								  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
								  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />

					<TextBox x:Name="FilterEditTextBox"
							 Text="{Binding FilterText,UpdateSourceTrigger=PropertyChanged}"
							 Height="{Binding ContentAreaHeight}"
							 Width="{Binding ContentAreaWidth}"
							 HorizontalContentAlignment="Left"
							 VerticalContentAlignment="Center"
							 Style="{StaticResource HorusTextBox}"
							 Tag="{TemplateBinding Tag}"
							 BorderThickness="0"
							 FontSize="{TemplateBinding FontSize}"
							 Background="Transparent"
							 Foreground="{Binding EditTextForeground}"
							 Visibility="Hidden"
							 IsReadOnly="{TemplateBinding IsReadOnly}" />
					<TextBox x:Name="PART_EditableTextBox"
							 Height="{Binding ContentAreaHeight}"
							 Width="{Binding ContentAreaWidth}"
							 HorizontalContentAlignment="Left"
							 VerticalContentAlignment="Center"
							 Style="{StaticResource HorusTextBox}"
							 FontSize="{TemplateBinding FontSize}"
							 Tag="{TemplateBinding Tag}"
							 BorderThickness="0"
							 Background="Transparent"
							 Foreground="{Binding EditTextForeground}"
							 Visibility="Hidden"
							 IsReadOnly="{TemplateBinding IsReadOnly}" />
				</Grid>
			</Border>

			<Popup x:Name="PART_Popup"
				   Placement="Bottom"
				   IsOpen="{TemplateBinding IsDropDownOpen}"
				   AllowsTransparency="True"
				   Focusable="False"
				   PopupAnimation="Slide">

				<Grid Name="DropDown"
					  Margin="0,0,15,15"
					  SnapsToDevicePixels="True"
					  MinWidth="{TemplateBinding ActualWidth}"
					  MaxHeight="{TemplateBinding MaxDropDownHeight}">

					<Grid.Effect>
						<DropShadowEffect Color="Black"
										  BlurRadius="4"
										  Direction="330"
										  Opacity="0.8"
										  ShadowDepth="4" />
					</Grid.Effect>

					<Border x:Name="DropDownBorder"
							Background="{Binding PopupBackground}"
							BorderThickness="{Binding PopupBorderThickness}"
							BorderBrush="{Binding PopupBorderBrush}">
						<logwatcher_ctrl:ScrollViewWatcher x:Name="DropDownScrollViewer"
														   Background="Transparent"
														   ScrollHeaderHeight="0"
														   ThumbBackground="{StaticResource ButtonBackground_Level1}"
														   ScrollBarBackground="Transparent">
							<Grid x:Name="grid"
								  RenderOptions.ClearTypeHint="Enabled">
								<Canvas x:Name="canvas"
										HorizontalAlignment="Left"
										Height="0"
										VerticalAlignment="Top"
										Width="0">
									<Rectangle x:Name="OpaqueRect"
											   Fill="{Binding Background, ElementName=DropDownBorder}"
											   Height="{Binding ActualHeight, ElementName=DropDownBorder}"
											   Width="{Binding ActualWidth, ElementName=DropDownBorder}" />
								</Canvas>
								<ItemsPresenter x:Name="ItemsPresenter"
												KeyboardNavigation.DirectionalNavigation="Contained"
												SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
							</Grid>
						</logwatcher_ctrl:ScrollViewWatcher>
					</Border>

				</Grid>
			</Popup>
		</Grid>

		<ControlTemplate.Triggers>
			<Trigger Property="HasItems"
					 Value="false">
				<Setter TargetName="DropDownBorder"
						Property="MinHeight"
						Value="95" />
			</Trigger>
			<Trigger Property="IsEnabled"
					 Value="false">
				<Setter Property="Foreground"
						Value="#888888" />
			</Trigger>
			<Trigger Property="IsGrouping"
					 Value="true">
				<Setter Property="ScrollViewer.CanContentScroll"
						Value="false" />
			</Trigger>
			<Trigger SourceName="PART_Popup"
					 Property="Popup.AllowsTransparency"
					 Value="true">
				<Setter TargetName="DropDownBorder"
						Property="CornerRadius"
						Value="0" />
				<Setter TargetName="DropDownBorder"
						Property="Margin"
						Value="0,2,0,0" />
			</Trigger>

			<Trigger Property="IsUsingHorusShadow"
					 Value="True">
				<Setter TargetName="ToggleButton"
						Property="Effect">
					<Setter.Value>
						<DropShadowEffect Color="Black"
										  BlurRadius="4"
										  Direction="0"
										  Opacity="0.5"
										  ShadowDepth="1" />
					</Setter.Value>
				</Setter>
			</Trigger>

			<Trigger Property="IsUsingHorusPopupShadow"
					 Value="True">
				<Setter TargetName="DropDown"
						Property="Effect">
					<Setter.Value>
						<DropShadowEffect Color="Black"
										  BlurRadius="4"
										  Direction="0"
										  Opacity="0.5"
										  ShadowDepth="1" />
					</Setter.Value>
				</Setter>

				<Setter TargetName="DropDown"
						Property="Margin"
						Value="0,0,15,15" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<ControlTemplate TargetType="{x:Type TextBox}"
					 x:Key="NonfocusableTextBox">
		<Border x:Name="border"
				BorderBrush="{TemplateBinding BorderBrush}"
				BorderThickness="{TemplateBinding BorderThickness}"
				Background="{TemplateBinding Background}"
				SnapsToDevicePixels="True">
			<ScrollViewer x:Name="PART_ContentHost"
						  Focusable="false"
						  HorizontalScrollBarVisibility="Hidden"
						  VerticalScrollBarVisibility="Hidden" />
		</Border>
	</ControlTemplate>

</ResourceDictionary>