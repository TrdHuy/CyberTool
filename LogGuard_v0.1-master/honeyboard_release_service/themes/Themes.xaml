<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:sys="clr-namespace:System;assembly=mscorlib"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:atp="clr-namespace:honeyboard_release_service.prop.attached_properties"
					xmlns:cs="clr-namespace:cyber_base.implement.views.cyber_scroll;assembly=cyber_base"
					xmlns:ctv="clr-namespace:cyber_base.implement.views.cyber_treeview;assembly=cyber_base">

	<ResourceDictionary.MergedDictionaries>

		<ResourceDictionary Source="pack://application:,,,/honeyboard_release_service;component/themes/RawSource.xaml" />
		<ResourceDictionary Source="pack://application:,,,/honeyboard_release_service;component/views/controls/path_text_box/PathTextBox.xaml" />

	</ResourceDictionary.MergedDictionaries>

	<Style x:Key="RT_TabControlStyle"
		   TargetType="{x:Type TabControl}">
		<Setter Property="SnapsToDevicePixels"
				Value="True" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TabControl}">
					<Grid KeyboardNavigation.TabNavigation="Local">
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition Height="*" />
						</Grid.RowDefinitions>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
																	  Storyboard.TargetProperty="(Border.BorderBrush).
                    (SolidColorBrush.Color)">
											<EasingColorKeyFrame KeyTime="0"
																 Value="#FFAAAAAA" />
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<TabPanel x:Name="HeaderPanel"
								  Grid.Row="0"
								  Panel.ZIndex="1"
								  Margin="0,0,4,-1"
								  IsItemsHost="True"
								  KeyboardNavigation.TabIndex="1"
								  Background="Transparent" />
						<Border x:Name="Border"
								Grid.Row="1"
								BorderThickness="1"
								CornerRadius="0,0,10,10"
								Background="{TemplateBinding Background}"
								KeyboardNavigation.TabNavigation="Local"
								KeyboardNavigation.DirectionalNavigation="Contained"
								KeyboardNavigation.TabIndex="2">

							<ContentPresenter x:Name="PART_SelectedContentHost"
											  ContentSource="SelectedContent" />
						</Border>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style  x:Key="NotebookDayVersionPresenterStyle"
			TargetType="ListView">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ListView">
					<Grid>
						<Border x:Name="RecMask"
								CornerRadius="10"
								Background="{TemplateBinding Background}" />
						<Border Name="Border"
								Background="{TemplateBinding Background}">
							<Border.OpacityMask>
								<VisualBrush Visual="{Binding ElementName=RecMask}" />
							</Border.OpacityMask>
							<ContentControl BorderBrush="{StaticResource ButtonBackground_Level1}"
											VerticalAlignment="Top"
											VerticalContentAlignment="Center"
											Style="{StaticResource CyberCollapsibleScrollStyle}">
								<ItemsPresenter />
							</ContentControl>
						</Border>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>

		<Setter Property="ItemContainerStyle">
			<Setter.Value>
				<Style TargetType="ListViewItem">
					<Setter Property="Height"
							Value="30" />

					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="ListViewItem">
								<Grid>
									<TextBlock Text="{Binding CommitTitle, Mode=OneWay}"
											   Margin="7,0,0,0"
											   VerticalAlignment="Center" />
									<Rectangle x:Name="FeedBackRec"
											   IsHitTestVisible="False" />
								</Grid>
								<ControlTemplate.Triggers>
									<Trigger Property="IsMouseOver"
											 Value="True">
										<Setter Property="Fill"
												TargetName="FeedBackRec"
												Value="{DynamicResource MouseOverFillEffect_Level1}" />
									</Trigger>
								</ControlTemplate.Triggers>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="RT_BranchsComboboxStyle"
		   TargetType="ComboBox">

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ComboBox}">
					<ControlTemplate.Resources>
						<sys:Double x:Key="{x:Static SystemParameters.VerticalScrollBarWidthKey}">6</sys:Double>
						<sys:Double x:Key="{x:Static SystemParameters.HorizontalScrollBarHeightKey}">6</sys:Double>

						<ControlTemplate x:Key="ComboBoxToggleButton"
										 TargetType="{x:Type ToggleButton}">
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition />
									<ColumnDefinition Width="25" />
								</Grid.ColumnDefinitions>
								<VisualStateManager.VisualStateGroups>
									<VisualStateGroup x:Name="CommonStates">
										<VisualState x:Name="Normal" />
										<VisualState x:Name="MouseOver" />
										<VisualState x:Name="Pressed" />
										<VisualState x:Name="Disabled" />
									</VisualStateGroup>
								</VisualStateManager.VisualStateGroups>
								<Border x:Name="Border"
										Grid.ColumnSpan="2"
										BorderBrush="{StaticResource BorderbrushEffect_Level1}"
										CornerRadius="5"
										BorderThickness="0"
										Background="{Binding Background, RelativeSource={RelativeSource AncestorType=ComboBox, Mode=FindAncestor}}" />

								<Path x:Name="Arrow"
									  Grid.Column="1"
									  Height="9"
									  Width="9"
									  Fill="{StaticResource Foreground_Level3}"
									  HorizontalAlignment="Center"
									  VerticalAlignment="Center"
									  Stretch="Uniform"
									  RenderTransformOrigin="0.5,0.5"
									  Data="{Binding Source={StaticResource DropDownIcon}}">
									<Path.RenderTransform>
										<RotateTransform x:Name="AnimRotateTransfrom"
														 Angle="0" />
									</Path.RenderTransform>
								</Path>
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger Property="IsChecked"
										 Value="True">
									<Trigger.EnterActions>
										<BeginStoryboard>
											<Storyboard>
												<ThicknessAnimation Storyboard.TargetProperty="BorderThickness"
																	Storyboard.TargetName="Border"
																	From="0"
																	To="1"
																	Duration="0:0:0.1" />
												<DoubleAnimation Storyboard.TargetProperty="(RotateTransform.Angle)"
																 Storyboard.TargetName="AnimRotateTransfrom"
																 From="0"
																 To="-90"
																 Duration="0:0:0.1" />
											</Storyboard>
										</BeginStoryboard>
									</Trigger.EnterActions>
									<Trigger.ExitActions>
										<BeginStoryboard>
											<Storyboard>
												<ThicknessAnimation Storyboard.TargetProperty="BorderThickness"
																	Storyboard.TargetName="Border"
																	From="1"
																	To="0"
																	Duration="0:0:0.1" />
												<DoubleAnimation Storyboard.TargetProperty="(RotateTransform.Angle)"
																 Storyboard.TargetName="AnimRotateTransfrom"
																 From="-90"
																 To="0"
																 Duration="0:0:0.1" />
											</Storyboard>
										</BeginStoryboard>
									</Trigger.ExitActions>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>

						<ControlTemplate x:Key="ComboBoxTextBox"
										 TargetType="{x:Type TextBox}">
							<Border x:Name="PART_ContentHost"
									Focusable="False"
									Background="{TemplateBinding Background}" />
						</ControlTemplate>

						<Style x:Key="{x:Type ComboBoxItem}"
							   TargetType="{x:Type ComboBoxItem}">
							<Setter Property="Foreground"
									Value="{StaticResource Foreground_Level3}" />
							<Setter Property="SnapsToDevicePixels"
									Value="true" />
							<Setter Property="Height"
									Value="30" />
							<Setter Property="OverridesDefaultStyle"
									Value="true" />
							<Setter Property="Template">
								<Setter.Value>
									<ControlTemplate TargetType="{x:Type ComboBoxItem}">
										<Border x:Name="Border"
												Padding="2"
												BorderThickness="1"
												BorderBrush="Transparent"
												SnapsToDevicePixels="true"
												Background="Transparent">
											<Border.InputBindings>
												<MouseBinding MouseAction="LeftClick"
															  CommandParameter="{Binding .}"
															  Command="{Binding OnComboBoxItemSelected}" />
											</Border.InputBindings>
											<ContentPresenter VerticalAlignment="Center" />
										</Border>

										<ControlTemplate.Triggers>
											<Trigger Property="IsMouseOver"
													 Value="True">
												<Setter TargetName="Border"
														Property="BorderBrush"
														Value="{StaticResource BorderbrushEffect_Level1}" />
											</Trigger>

											<Trigger Property="IsSelected"
													 Value="True">
												<Setter TargetName="Border"
														Property="Background"
														Value="{StaticResource ButtonBackground_Level1}" />
											</Trigger>
										</ControlTemplate.Triggers>
									</ControlTemplate>
								</Setter.Value>
							</Setter>

						</Style>
					</ControlTemplate.Resources>
					<Grid>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="MouseOver" />
								<VisualState x:Name="Disabled" />

							</VisualStateGroup>
							<VisualStateGroup x:Name="EditStates">
								<VisualState x:Name="Editable" />
								<VisualState x:Name="Uneditable" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<ToggleButton x:Name="ToggleButton"
									  Template="{StaticResource ComboBoxToggleButton}"
									  Grid.Column="2"
									  Focusable="false"
									  ClickMode="Press"
									  IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, 
              RelativeSource={RelativeSource TemplatedParent}}" />
						<TextBlock x:Name="ContentSite"
								   IsHitTestVisible="False"
								   Text="{Binding Path=(atp:ElementAttProperties.Proxy),RelativeSource={RelativeSource TemplatedParent}}"
								   Margin="8,0,0,0"
								   VerticalAlignment="Center"
								   HorizontalAlignment="Left">
						</TextBlock>
						<TextBlock x:Name="TagTextBox"
								   Margin="8,0,0,0"
								   Text="{TemplateBinding Tag}"
								   Background="Transparent"
								   VerticalAlignment="Center"
								   IsHitTestVisible="False"
								   Foreground="{StaticResource Foreground_Level1}"
								   FontSize="{TemplateBinding FontSize}">
							<TextBlock.Style>
								<Style TargetType="{x:Type TextBlock}">
									<Setter Property="Visibility"
											Value="Hidden" />
									<Style.Triggers>
										<DataTrigger Binding="{Binding Path=(atp:ElementAttProperties.Proxy),RelativeSource={RelativeSource TemplatedParent}}"
													 Value="">
											<Setter Property="Visibility"
													Value="Visible" />
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</TextBlock.Style>
						</TextBlock>

						<TextBox x:Name="PART_EditableTextBox"
								 Style="{x:Null}"
								 Template="{StaticResource ComboBoxTextBox}"
								 HorizontalAlignment="Left"
								 VerticalAlignment="Bottom"
								 Margin="3,3,23,3"
								 Focusable="True"
								 Background="Transparent"
								 Visibility="Hidden"
								 IsReadOnly="{TemplateBinding IsReadOnly}" />
						<Popup x:Name="Popup"
							   Placement="Bottom"
							   IsOpen="{TemplateBinding IsDropDownOpen}"
							   AllowsTransparency="True"
							   Focusable="False"
							   PopupAnimation="Slide">
							<Grid x:Name="DropDown"
								  SnapsToDevicePixels="True"
								  MinWidth="{TemplateBinding ActualWidth}"
								  MaxHeight="{TemplateBinding MaxDropDownHeight}">
								<Rectangle x:Name="DropDownBorder"
										   StrokeThickness="10"
										   Stroke="Transparent"
										   RadiusX="5"
										   RadiusY="5"
										   Fill="{StaticResource Background_Level3}">

								</Rectangle>

								<ctv:CyberTreeViewer x:Name="TreeViewItemLst"
													 ItemsSource="{TemplateBinding ItemsSource}"
													 BorderThickness="0"
													 SelectedCyberItem="{Binding Path=SelectedItem,Mode=OneWayToSource,RelativeSource={RelativeSource TemplatedParent}}"
													 Margin="5,0,5,10"
													 Padding="10,5,0,0"
													 Background="Transparent" />
							</Grid>
						</Popup>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="HasItems"
								 Value="false">
							<Setter TargetName="DropDownBorder"
									Property="MinHeight"
									Value="95" />
						</Trigger>
						<Trigger Property="IsGrouping"
								 Value="true">
							<Setter Property="ScrollViewer.CanContentScroll"
									Value="false" />
						</Trigger>

					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type TextBox}"
		   x:Key="RT_LogMonitorTextBoxStyle">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TextBox}">
					<ControlTemplate.Resources>
						<sys:Double x:Key="{x:Static SystemParameters.VerticalScrollBarWidthKey}">6</sys:Double>
						<sys:Double x:Key="{x:Static SystemParameters.HorizontalScrollBarHeightKey}">6</sys:Double>
					</ControlTemplate.Resources>

					<Grid>
						<Rectangle x:Name="BackgroundRec"
								   Fill="{TemplateBinding Background}"
								   StrokeThickness="0" />

						<cs:CyberScrollView x:Name="PART_ContentHost"
											Margin="5,7,0,0"
											SnapsToDevicePixels="True"
											VerticalContentAlignment="Center"
											VerticalAlignment="Top"
											VerticalScrollBarVisibility="Auto"
											HorizontalScrollBarVisibility="Disabled"
											ScrollHeaderHeight="0"
											ThumbBackground="{DynamicResource ButtonBackground_Level1}"
											ScrollBarBackground="Transparent" />
					</Grid>

				</ControlTemplate>
			</Setter.Value>
		</Setter>


	</Style>

</ResourceDictionary>