<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
			        xmlns:sys="clr-namespace:System;assembly=mscorlib"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:cs="clr-namespace:cyber_base.implement.views.cyber_scroll;assembly=cyber_base"
                    xmlns:cb="clr-namespace:cyber_base.implement.views.clipping_border;assembly=cyber_base">

    <Style x:Key="{x:Type ContextMenu}"
		   TargetType="{x:Type ContextMenu}">
        <Setter Property="Background"
				Value="{StaticResource InflectBackground_Level1}" />
        <Setter Property="Foreground"
				Value="{StaticResource Background_Level2}" />

        <Setter Property="BorderThickness"
				Value="0" />
        <Setter Property="SnapsToDevicePixels"
				Value="True" />
        <Setter Property="FontFamily"
				Value="Calibri" />
        <Setter Property="OverridesDefaultStyle"
				Value="True" />
        <Setter Property="Grid.IsSharedSizeScope"
				Value="true" />
        <Setter Property="HasDropShadow"
				Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border Name="Border"
							CornerRadius="4"
							MinWidth="80"
							Background="{TemplateBinding Background}"
							BorderThickness="{TemplateBinding BorderThickness}">

                        <StackPanel IsItemsHost="True"
									KeyboardNavigation.DirectionalNavigation="Cycle" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow"
								 Value="true">
                            <Setter TargetName="Border"
									Property="Padding"
									Value="0,3,0,3" />
                            <Setter TargetName="Border"
									Property="CornerRadius"
									Value="4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ToolTip}">
        <Setter Property="OverridesDefaultStyle"
				Value="true" />
        <Setter Property="Background"
				Value="{StaticResource InflectBackground_Level1}" />
        <Setter Property="Foreground"
				Value="{StaticResource Background_Level2}" />
        <Setter Property="FontFamily"
				Value="Calibri" />
        <Setter Property="FontSize"
				Value="8" />
        <Setter Property="FontWeight"
				Value="Bold" />
        <Setter Property="BorderThickness"
				Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToolTip">
                    <Border Name="Border"
							CornerRadius="4"
							MinWidth="80"
							Background="{TemplateBinding Background}"
							BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter Margin="15,10"
										  HorizontalAlignment="Left"
										  VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--ScrollViewer for a MenuItem-->
    <MenuScrollingVisibilityConverter x:Key="MenuScrollingVisibilityConverter" />

    <Style TargetType="{x:Type cs:CyberScrollView}"
		   x:Key="MenuScrollViewer">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type cs:CyberScrollView}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <Border Background="{TemplateBinding Background}"
								Margin="{TemplateBinding Padding}"
								Grid.ColumnSpan="2">
                            <ScrollContentPresenter Name="PART_ScrollContentPresenter"
													KeyboardNavigation.DirectionalNavigation="Local"
													CanContentScroll="{TemplateBinding CanContentScroll}"
													CanHorizontallyScroll="False"
													CanVerticallyScroll="False" />

                        </Border>

                        <ScrollBar Name="PART_HorizontalScrollBar"
								   Orientation="Horizontal"
								   Grid.Row="1"
								   BorderThickness="0"
								   Maximum="{TemplateBinding ScrollableWidth}"
								   ViewportSize="{TemplateBinding ViewportWidth}"
								   Value="{TemplateBinding HorizontalOffset}"
								   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
								   Background="{Binding RelativeSource={RelativeSource AncestorType={x:Type cs:CyberScrollView}, Mode=FindAncestor}, Path=ScrollBarBackground}">
                            <ScrollBar.Template>
                                <ControlTemplate TargetType="{x:Type ScrollBar}">
                                    <Grid x:Name="Bg"
										  SnapsToDevicePixels="True">
                                        <Border BorderBrush="{TemplateBinding BorderBrush}"
												BorderThickness="{TemplateBinding BorderThickness}"
												Background="{TemplateBinding Background}"
												Grid.Column="1" />
                                        <Track x:Name="PART_Track"
											   Grid.Column="1"
											   IsEnabled="{TemplateBinding IsMouseOver}">
                                            <Track.DecreaseRepeatButton>
                                                <RepeatButton Command="ScrollBar.PageLeftCommand">
                                                    <RepeatButton.Style>
                                                        <Style TargetType="{x:Type RepeatButton}">
                                                            <Setter Property="OverridesDefaultStyle"
																	Value="True" />
                                                            <Setter Property="Background"
																	Value="Transparent" />
                                                            <Setter Property="Focusable"
																	Value="False" />
                                                            <Setter Property="IsTabStop"
																	Value="False" />
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                        <Rectangle Fill="{TemplateBinding Background}"
																				   Height="{TemplateBinding Height}"
																				   Width="{TemplateBinding Width}" />
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </RepeatButton.Style>
                                                </RepeatButton>
                                            </Track.DecreaseRepeatButton>
                                            <Track.IncreaseRepeatButton>
                                                <RepeatButton Command="ScrollBar.PageRightCommand">
                                                    <RepeatButton.Style>
                                                        <Style TargetType="{x:Type RepeatButton}">
                                                            <Setter Property="OverridesDefaultStyle"
																	Value="True" />
                                                            <Setter Property="Background"
																	Value="Transparent" />
                                                            <Setter Property="Focusable"
																	Value="False" />
                                                            <Setter Property="IsTabStop"
																	Value="False" />
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                        <Rectangle Fill="{TemplateBinding Background}"
																				   Height="{TemplateBinding Height}"
																				   Width="{TemplateBinding Width}" />
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </RepeatButton.Style>
                                                </RepeatButton>
                                            </Track.IncreaseRepeatButton>
                                            <Track.Thumb>
                                                <Thumb>
                                                    <Thumb.Style>
                                                        <Style TargetType="{x:Type Thumb}">
                                                            <Setter Property="OverridesDefaultStyle"
																	Value="True" />
                                                            <Setter Property="IsTabStop"
																	Value="False" />
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                                                        <Rectangle x:Name="rectangle"
																				   Fill="{Binding RelativeSource={RelativeSource AncestorType={x:Type cs:CyberScrollView},Mode=FindAncestor},Path=ThumbBackground}"
																				   Height="{TemplateBinding Height}"
																				   SnapsToDevicePixels="True"
																				   Width="{TemplateBinding Width}" />
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </Thumb.Style>
                                                </Thumb>
                                            </Track.Thumb>
                                        </Track>
                                    </Grid>
                                </ControlTemplate>
                            </ScrollBar.Template>
                        </ScrollBar>

                        <ScrollBar Name="PART_VerticalScrollBar"
								   Grid.Column="1"
								   Grid.RowSpan="2"
								   Maximum="{TemplateBinding ScrollableHeight}"
								   ViewportSize="{TemplateBinding ViewportHeight}"
								   Value="{TemplateBinding VerticalOffset}"
								   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
								   Background="{Binding RelativeSource={RelativeSource AncestorType={x:Type cs:CyberScrollView}, Mode=FindAncestor}, Path=ScrollBarBackground}">
                            <ScrollBar.Template>
                                <ControlTemplate TargetType="{x:Type ScrollBar}">
                                    <Grid x:Name="Bg"
										  SnapsToDevicePixels="True">
                                        <Border x:Name="border"
												BorderBrush="{TemplateBinding BorderBrush}"
												BorderThickness="0"
												Background="{TemplateBinding Background}"
												Grid.Row="1" />
                                        <Track x:Name="PART_Track"
											   IsDirectionReversed="True"
											   IsEnabled="True"
											   Grid.Row="1">
                                            <Track.DecreaseRepeatButton>
                                                <RepeatButton Command="ScrollBar.PageUpCommand">
                                                    <RepeatButton.Style>
                                                        <Style TargetType="{x:Type RepeatButton}">
                                                            <Setter Property="OverridesDefaultStyle"
																	Value="True" />
                                                            <Setter Property="Background"
																	Value="Transparent" />
                                                            <Setter Property="Focusable"
																	Value="False" />
                                                            <Setter Property="IsTabStop"
																	Value="False" />
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                        <Rectangle Fill="{TemplateBinding Background}"
																				   Height="{TemplateBinding Height}"
																				   Width="{TemplateBinding Width}" />
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </RepeatButton.Style>
                                                </RepeatButton>
                                            </Track.DecreaseRepeatButton>
                                            <Track.IncreaseRepeatButton>
                                                <RepeatButton Command="ScrollBar.PageDownCommand">
                                                    <RepeatButton.Style>
                                                        <Style TargetType="{x:Type RepeatButton}">
                                                            <Setter Property="OverridesDefaultStyle"
																	Value="True" />
                                                            <Setter Property="Background"
																	Value="Transparent" />
                                                            <Setter Property="Focusable"
																	Value="False" />
                                                            <Setter Property="IsTabStop"
																	Value="False" />
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                        <Rectangle Fill="{TemplateBinding Background}"
																				   Height="{TemplateBinding Height}"
																				   Width="{TemplateBinding Width}" />
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </RepeatButton.Style>
                                                </RepeatButton>
                                            </Track.IncreaseRepeatButton>
                                            <Track.Thumb>
                                                <Thumb>
                                                    <Thumb.Style>
                                                        <Style TargetType="{x:Type Thumb}">
                                                            <Setter Property="OverridesDefaultStyle"
																	Value="True" />
                                                            <Setter Property="IsTabStop"
																	Value="False" />
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                                                        <Rectangle x:Name="rectangle"
																				   Fill="{Binding RelativeSource={RelativeSource AncestorType={x:Type cs:CyberScrollView},Mode=FindAncestor},Path=ThumbBackground}"
																				   Height="{TemplateBinding Height}"
																				   SnapsToDevicePixels="True"
																				   Width="{TemplateBinding Width}" />
                                                                        <ControlTemplate.Triggers>
                                                                            <Trigger Property="IsEnabled"
																					 Value="False">
                                                                                <Setter Property="Width"
																						TargetName="rectangle"
																						Value="2" />
                                                                                <Setter Property="HorizontalAlignment"
																						TargetName="rectangle"
																						Value="Right" />
                                                                            </Trigger>
                                                                        </ControlTemplate.Triggers>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </Thumb.Style>
                                                </Thumb>
                                            </Track.Thumb>
                                        </Track>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=cs:CyberScrollView, Mode=FindAncestor}, Path=IsMouseOverExpandScrollbar}"
														   Value="True" />
                                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}"
														   Value="False" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter TargetName="border"
													Property="Background"
													Value="Transparent" />
                                            <Setter TargetName="PART_Track"
													Property="IsEnabled"
													Value="False" />
                                        </MultiDataTrigger>


                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </ScrollBar.Template>
                        </ScrollBar>

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--Separator -->
    <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}"
		   TargetType="{x:Type Separator}">
        <Setter Property="Height"
				Value="auto" />
        <Setter Property="Margin"
				Value="10,0,10,0" />
        <Setter Property="MinWidth"
				Value="200" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <TextBlock FontSize="10"
								   Foreground="{DynamicResource Foreground_Level1}"
								   Text="{TemplateBinding Tag}"
								   Margin="0,0,5,0" />
                        <Rectangle Fill="{StaticResource Foreground_Level1}"
								   Grid.Column="1"
								   Height="1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="Tag"
					 Value="{x:Null}">
                <Setter Property="MinWidth"
						Value="0" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Outer menu items-->
    <Style TargetType="{x:Type MenuItem}">
        <Setter Property="MinHeight"
				Value="30" />
        <Setter Property="MinWidth"
				Value="150" />
        <Setter Property="Foreground"
				Value="{StaticResource Background_Level2}" />
        <Setter Property="Background"
				Value="{StaticResource InflectBackground_Level1}" />
        <Style.Triggers>
            <Trigger Property="IsEnabled"
					 Value="False">
                <Setter Property="Foreground"
						Value="LightGray"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- TopLevelItem -->
    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}"
					 TargetType="{x:Type MenuItem}">
        <Border x:Name="Border">
            <Grid>
                <ContentPresenter Margin="6,3,6,3"
								  ContentSource="Header"
								  RecognizesAccessKey="True" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted"
					 Value="true">
                <Setter Property="Background"
						TargetName="Border"
						Value="Aqua" />
            </Trigger>
            <Trigger Property="IsEnabled"
					 Value="False">
                <Setter Property="Foreground"
						Value="Gray" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- TopLevelHeader -->
    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}"
					 TargetType="{x:Type MenuItem}">
        <Border x:Name="Border">
            <Grid>
                <ContentPresenter Margin="6,3,6,3"
								  ContentSource="Header"
								  RecognizesAccessKey="True" />
                <Popup x:Name="Popup"
					   Placement="Bottom"
					   IsOpen="{TemplateBinding IsSubmenuOpen}"
					   AllowsTransparency="True"
					   Focusable="False"
					   PopupAnimation="Fade">
                    <Border x:Name="SubmenuBorder"
							SnapsToDevicePixels="True"
							BorderThickness="1"
							Background="Aqua">
                        <cs:CyberScrollView CanContentScroll="True"
									  Style="{StaticResource MenuScrollViewer}">
                            <StackPanel IsItemsHost="True"
										KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </cs:CyberScrollView>
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation"
					 Value="true">
                <Setter TargetName="Popup"
						Property="PopupAnimation"
						Value="None" />
            </Trigger>
            <Trigger Property="IsHighlighted"
					 Value="true">
                <Setter TargetName="Border"
						Property="BorderBrush"
						Value="Transparent" />
                <Setter Property="Background"
						TargetName="Border"
						Value="Green">

                </Setter>
            </Trigger>
            <Trigger SourceName="Popup"
					 Property="AllowsTransparency"
					 Value="True">
                <Setter TargetName="SubmenuBorder"
						Property="CornerRadius"
						Value="0,0,4,4" />
                <Setter TargetName="SubmenuBorder"
						Property="Padding"
						Value="0,0,0,3" />
            </Trigger>
            <Trigger Property="IsEnabled"
					 Value="False">
                <Setter Property="Foreground"
						Value="Black">

                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- SubmenuItem -->
    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}"
					 TargetType="{x:Type MenuItem}">
        <Border Name="Border">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"
                                      SharedSizeGroup="Icon" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto"
									  SharedSizeGroup="Shortcut" />
                    <ColumnDefinition Width="13" />
                </Grid.ColumnDefinitions>

                <Path Name="IconPath"
					  Fill="Transparent"
					  Width="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Icon.Width}"
					  Height="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Icon.Height}"
					  Margin="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Icon.Margin}"
					  Stretch="Uniform"
					  Data="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Icon.Data}" />

                <ContentPresenter Name="Icon"
								  Margin="6,0,6,0"
								  VerticalAlignment="Center"
								  ContentSource="Icon" />
                <Ellipse Name="CheckMark"
						 Width="10"
						 Height="10"
						 Visibility="Hidden"
						 Fill="Transparent" 
                         Margin="6,0,6,0"/>

                <ContentPresenter Name="HeaderHost"
								  Grid.Column="1"
								  VerticalAlignment="Center"
								  ContentSource="Header"
								  RecognizesAccessKey="True" />
                <TextBlock x:Name="InputGestureText"
						   Grid.Column="2"
						   Text="{TemplateBinding InputGestureText}"
						   Margin="5,2,0,2"
						   DockPanel.Dock="Right" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon"
					 Value="{x:Null}">
                <Setter TargetName="Icon"
						Property="Visibility"
						Value="Hidden" />
            </Trigger>
            <Trigger Property="IsChecked"
					 Value="true">
                <Setter TargetName="CheckMark"
						Property="Fill"
						Value="{DynamicResource ButtonBackground_Level1}" />
                <Setter TargetName="IconPath"
						Property="Fill"
						Value="{DynamicResource ButtonBackground_Level1}" />
            </Trigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsCheckable"
							   Value="true" />
                    <Condition Property="Icon"
							   Value="{x:Null}" />
                </MultiTrigger.Conditions>
                <Setter TargetName="CheckMark"
						Property="Visibility"
						Value="Visible" />
                <Setter TargetName="Icon"
						Property="Visibility"
						Value="Hidden" />
                <Setter TargetName="IconPath"
						Property="Visibility"
						Value="Hidden" />
            </MultiTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition  Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Icon.Data, Converter={StaticResource NullCheckConverter}}"
								Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="IconPath"
						Property="Visibility"
						Value="Visible" />
                <Setter TargetName="Icon"
						Property="Visibility"
						Value="Hidden" />
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsCheckable}"
							   Value="False" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Icon, Converter={StaticResource NullCheckConverter}}"
							   Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="IconPath"
						Property="Visibility"
						Value="Hidden" />
                <Setter TargetName="Icon"
						Property="Visibility"
						Value="Visible" />
            </MultiDataTrigger>

            <Trigger Property="IsHighlighted"
					 Value="true">
                <Setter TargetName="Border"
						Property="Background"
						Value="{StaticResource MouseOverFillEffect_Level3}" />
            </Trigger>
            <Trigger Property="IsEnabled"
					 Value="false">
                <Setter Property="Foreground"
						Value="#0f3c5a" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- SubmenuHeader -->
    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}"
					 TargetType="{x:Type MenuItem}">
        <Border Name="Border">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"
									  SharedSizeGroup="Icon" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto"
									  SharedSizeGroup="Shortcut" />
                    <ColumnDefinition Width="13" />
                </Grid.ColumnDefinitions>
                <ContentPresenter Name="Icon"
								  Margin="6,0,6,0"
								  VerticalAlignment="Center"
								  ContentSource="Icon" />
                <TextBlock Name="HeaderHost"
						   Grid.Column="1"
						   FontWeight="Bold"
						   VerticalAlignment="Center"
						   Text="{TemplateBinding Header}" />
                <TextBlock x:Name="InputGestureText"
						   Grid.Column="2"
						   Text="{TemplateBinding InputGestureText}"
						   Margin="5,2,2,2"
						   VerticalAlignment="Center"
						   DockPanel.Dock="Right" />
                <Path Grid.Column="3"
					  Height="14"
					  Width="14"
					  Margin="0,0,4,0"
					  Stretch="Uniform"
					  HorizontalAlignment="Center"
					  VerticalAlignment="Center"
					  Data="{Binding Source={StaticResource ExpandContextMenuIcon}}"
					  Fill="{StaticResource Background_Level3}" />
                <Popup Name="Popup"
					   Placement="Right"
					   HorizontalOffset="-4"
					   IsOpen="{TemplateBinding IsSubmenuOpen}"
					   AllowsTransparency="True"
					   Focusable="False"
					   PopupAnimation="Fade">
                    <Border Name="SubmenuBorder"
							SnapsToDevicePixels="True"
							Background="{TemplateBinding Background}">
                        <StackPanel IsItemsHost="True"
									KeyboardNavigation.DirectionalNavigation="Cycle" />
                    </Border>
                </Popup>
            </Grid>
        </Border>

        <ControlTemplate.Triggers>
            <Trigger Property="Icon"
					 Value="{x:Null}">
                <Setter TargetName="Icon"
						Property="Visibility"
						Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsHighlighted"
					 Value="true">
                <Setter TargetName="Border"
						Property="Background"
						Value="{StaticResource MouseOverFillEffect_Level3}" />
            </Trigger>
            <Trigger SourceName="Popup"
					 Property="Popup.AllowsTransparency"
					 Value="True">
                <Setter TargetName="SubmenuBorder"
						Property="CornerRadius"
						Value="4" />
                <Setter TargetName="SubmenuBorder"
						Property="Padding"
						Value="0,3,0,3" />
            </Trigger>
            <Trigger Property="IsEnabled"
					 Value="false">
                <Setter Property="Foreground"
						Value="#0f3c5a" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="CyberScrollableContextMenu"
		   TargetType="{x:Type ContextMenu}">
        <Setter Property="MaxHeight"
                Value="300" />
        <Setter Property="Background"
				Value="{StaticResource InflectBackground_Level1}" />
        <Setter Property="Foreground"
				Value="{StaticResource Background_Level2}" />
        <Setter Property="BorderThickness"
				Value="0" />
        <Setter Property="SnapsToDevicePixels"
				Value="True" />
        <Setter Property="FontFamily"
				Value="Calibri" />
        <Setter Property="OverridesDefaultStyle"
				Value="True" />
        <Setter Property="Grid.IsSharedSizeScope"
				Value="true" />
        <Setter Property="HasDropShadow"
				Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <ControlTemplate.Resources>
                        <sys:Double x:Key="{x:Static SystemParameters.VerticalScrollBarWidthKey}">6</sys:Double>
                        <sys:Double x:Key="{x:Static SystemParameters.HorizontalScrollBarHeightKey}">6</sys:Double>
                    </ControlTemplate.Resources>
                    <cb:ClippingBorder Padding="3"
                                       CornerRadius="4"
                                       MinWidth="100"
							           Background="{TemplateBinding Background}">
                        <cs:CyberScrollView ThumbBackground="{StaticResource ButtonBackground_Level1}"
										CanContentScroll="True"
										IsMouseOverExpandScrollbar="True"
										VerticalAlignment="Top"
										VerticalContentAlignment="Center">
                            <StackPanel IsItemsHost="True"
									KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </cs:CyberScrollView>
                    </cb:ClippingBorder>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>