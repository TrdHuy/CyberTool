<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:anim="clr-namespace:cyber_base.implement.views.cyber_anim;assembly=cyber_base"
					xmlns:cw="clr-namespace:cyber_base.implement.views.cyber_window;assembly=cyber_base"
					xmlns:cb="clr-namespace:cyber_base.implement.views.clipping_border;assembly=cyber_base"
					xmlns:csv="clr-namespace:cyber_base.implement.views.cyber_scroll;assembly=cyber_base">

	<ControlTemplate TargetType="{x:Type Button}"
					 x:Key="IconBtnTmpl">
		<Grid Background="Transparent">
			<Path x:Name="ContentPresenterPath"
				  Data="{TemplateBinding Content, Converter={StaticResource GeoPathConverter}}"
				  Stretch="Uniform"
				  Margin="{TemplateBinding Padding}"
				  Fill="{TemplateBinding Foreground}" />
			<Path x:Name="FeedbackPath"
				  Visibility="Hidden"
				  Data="{TemplateBinding Content, Converter={StaticResource GeoPathConverter}}"
				  Stretch="Uniform"
				  Margin="{TemplateBinding Padding}"
				  Fill="{TemplateBinding Background}" />
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsMouseOver"
					 Value="True">
				<Setter Property="Visibility"
						TargetName="FeedbackPath"
						Value="Visible" />
				<Setter Property="Cursor"
						Value="Hand" />
			</Trigger>
			<Trigger Property="IsPressed"
					 Value="True">
				<Setter Property="Visibility"
						TargetName="FeedbackPath"
						Value="Visible" />
				<Setter Property="Fill"
						TargetName="FeedbackPath"
						Value="#2c000000" />
			</Trigger>
			<Trigger Property="IsEnabled"
					 Value="False">
				<Setter Property="Visibility"
						TargetName="FeedbackPath"
						Value="Visible" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<ControlTemplate TargetType="{x:Type Button}"
					 x:Key="RoundedBtnTmpl">
		<cb:ClippingBorder x:Name="border"
						   Background="{TemplateBinding Background}"
						   BorderThickness="{TemplateBinding BorderThickness}"
						   BorderBrush="{TemplateBinding BorderBrush}"
						   CornerRadius="5">
			<ContentPresenter Margin="{TemplateBinding Padding}"
							  Content="{TemplateBinding Content}"
							  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
		</cb:ClippingBorder>
		<ControlTemplate.Triggers>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsMouseOver"
							   Value="True" />
					<Condition Property="IsPressed"
							   Value="False" />
				</MultiTrigger.Conditions>
				<Setter Property="BorderBrush"
						TargetName="border"
						Value="{DynamicResource BorderbrushEffect_Level1}" />
			</MultiTrigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<Style TargetType="{x:Type cw:CyberWindow}"
		   x:Key="CyberInstallerWindowStyle">
		<Setter Property="ChromeBackground"
				Value="{StaticResource Background_Level2}" />
		<Setter Property="AllowsTransparency"
				Value="True" />
		<Setter Property="Background"
				Value="{StaticResource Background_Level2}" />
		<Setter Property="WindowStyle"
				Value="None" />
		<Setter Property="ResizeMode"
				Value="NoResize" />
		<Setter Property="WindowChrome.WindowChrome">
			<Setter.Value>
				<WindowChrome CaptionHeight="30" />
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type cw:CyberWindow}">
					<ControlTemplate.Resources>

						<!--Window control button-->
						<Style x:Key="WindowControlButton"
							   TargetType="{x:Type Button}">
							<Style.Triggers>
								<Trigger Property="IsMouseOver"
										 Value="True">
									<Setter Property="Foreground"
											Value="{StaticResource Foreground_Level3}" />
								</Trigger>
							</Style.Triggers>
							<Setter Property="WindowChrome.IsHitTestVisibleInChrome"
									Value="True" />
							<Setter Property="Background"
									Value="Transparent" />
							<Setter Property="Height"
									Value="30" />
							<Setter Property="Width"
									Value="30" />
							<Setter Property="VerticalAlignment"
									Value="Stretch" />
							<Setter Property="Foreground"
									Value="{StaticResource Foreground_Level2}" />
							<Setter Property="Template">
								<Setter.Value>
									<ControlTemplate TargetType="{x:Type Button}">
										<Border Background="{TemplateBinding Background}"
												Padding="{TemplateBinding Padding}"
												x:Name="MainBorder">
											<Path	x:Name="ContentPath"
													Width="13"
													Height="13"
													Fill="{TemplateBinding Foreground}"
													Data="{Binding Source={StaticResource CloseButton}}"
													Stretch="Uniform" />
										</Border>
										<ControlTemplate.Triggers>
											<Trigger Property="IsMouseOver"
													 Value="True">
												<Setter Property="Height"
														TargetName="ContentPath"
														Value="15" />
												<Setter Property="Width"
														TargetName="ContentPath"
														Value="15" />
												<Setter Property="Background"
														TargetName="MainBorder"
														Value="#4CEB2838" />
											</Trigger>

										</ControlTemplate.Triggers>
									</ControlTemplate>
								</Setter.Value>
							</Setter>


						</Style>

						<!--Window Maximize button-->
						<Style x:Key="WindowMaximizeButton"
							   BasedOn="{StaticResource WindowControlButton}"
							   TargetType="{x:Type Button}">
							<Style.Triggers>
								<DataTrigger Value="NoResize"
											 Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Path=ResizeMode}">
									<Setter Property="Visibility"
											Value="Collapsed" />
								</DataTrigger>

								<DataTrigger Value="CanResize"
											 Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Path=ResizeMode}">
									<Setter Property="Visibility"
											Value="Visible" />
								</DataTrigger>
							</Style.Triggers>
							<Setter Property="Template">
								<Setter.Value>
									<ControlTemplate TargetType="{x:Type Button}">
										<Border Background="{TemplateBinding Background}"
												Padding="{TemplateBinding Padding}"
												x:Name="MainBorder">
											<Path	x:Name="ContentPath"
													Width="13"
													Height="13"
													Fill="{TemplateBinding Foreground}"
													Data="{Binding Source={StaticResource MaximizeButton}}"
													Stretch="Uniform" />
										</Border>
										<ControlTemplate.Triggers>
											<Trigger Property="IsMouseOver"
													 Value="True">
												<Setter Property="Height"
														TargetName="ContentPath"
														Value="15" />
												<Setter Property="Width"
														TargetName="ContentPath"
														Value="15" />
												<Setter Property="Background"
														TargetName="MainBorder"
														Value="#4C989898" />
											</Trigger>
											<!--<MultiDataTrigger>
													<MultiDataTrigger.Conditions>
														<Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}, Path=IsMouseOver}"
																   Value="True" />
														<Condition Value="Normal"
																   Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Path=WindowState}" />
													</MultiDataTrigger.Conditions>
													<Setter Property="Data"
															TargetName="ContentPath"
															Value="{Binding Source={StaticResource MaximizeMouseOverButton}}" />
												</MultiDataTrigger>
												<MultiDataTrigger>
													<MultiDataTrigger.Conditions>
														<Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}, Path=IsMouseOver}"
																   Value="True" />
														<Condition Value="Maximized"
																   Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Path=WindowState}" />
													</MultiDataTrigger.Conditions>
													<Setter Property="Data"
															TargetName="ContentPath"
															Value="{Binding Source={StaticResource SmallmizeMouseOverButton}}" />
												</MultiDataTrigger>
												<DataTrigger Value="Maximized"
															 Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Path=WindowState}">
													<Setter Property="Data"
															TargetName="ContentPath"
															Value="{Binding Source={StaticResource SmallmizeButton}}" />
												</DataTrigger>-->
										</ControlTemplate.Triggers>
									</ControlTemplate>
								</Setter.Value>
							</Setter>
						</Style>

						<!--Window smallmize button-->
						<Style x:Key="WindowSmallmizeButton"
							   BasedOn="{StaticResource WindowControlButton}"
							   TargetType="{x:Type Button}">
							<Style.Triggers>
								<DataTrigger Value="NoResize"
											 Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Path=ResizeMode}">
									<Setter Property="Visibility"
											Value="Collapsed" />
								</DataTrigger>

								<DataTrigger Value="CanResize"
											 Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Path=ResizeMode}">
									<Setter Property="Visibility"
											Value="Visible" />
								</DataTrigger>
							</Style.Triggers>
							<Setter Property="Template">
								<Setter.Value>
									<ControlTemplate TargetType="{x:Type Button}">
										<Border Background="{TemplateBinding Background}"
												Padding="{TemplateBinding Padding}"
												x:Name="MainBorder">
											<Path	x:Name="ContentPath"
													Width="13"
													Height="13"
													Fill="{TemplateBinding Foreground}"
													Data="{Binding Source={StaticResource SmallmizeButton}}"
													Stretch="Uniform" />
										</Border>
										<ControlTemplate.Triggers>
											<Trigger Property="IsMouseOver"
													 Value="True">
												<Setter Property="Height"
														TargetName="ContentPath"
														Value="15" />
												<Setter Property="Width"
														TargetName="ContentPath"
														Value="15" />
												<Setter Property="Background"
														TargetName="MainBorder"
														Value="#4C989898" />
											</Trigger>
										</ControlTemplate.Triggers>
									</ControlTemplate>
								</Setter.Value>
							</Setter>
						</Style>

						<!-- Window Minimize Button -->
						<Style x:Key="WindowMinimizeButton"
							   BasedOn="{StaticResource WindowControlButton}"
							   TargetType="{x:Type Button}">
							<Setter Property="Template">
								<Setter.Value>
									<ControlTemplate TargetType="{x:Type Button}">
										<Border x:Name="MainBorder"
												Background="{TemplateBinding Background}"
												Padding="{TemplateBinding Padding}">
											<Path x:Name="ContentPath"
												  Width="13"
												  Height="13"
												  Fill="{TemplateBinding Foreground}"
												  Data="{Binding Source={StaticResource MinimizeButton}}"
												  Stretch="Uniform" />
										</Border>
										<ControlTemplate.Triggers>
											<Trigger Property="IsMouseOver"
													 Value="True">
												<Setter Property="Height"
														TargetName="ContentPath"
														Value="15" />
												<Setter Property="Width"
														TargetName="ContentPath"
														Value="15" />
												<Setter Property="Background"
														TargetName="MainBorder"
														Value="#4C989898" />
											</Trigger>
										</ControlTemplate.Triggers>
									</ControlTemplate>
								</Setter.Value>
							</Setter>
						</Style>

					</ControlTemplate.Resources>

					<Border x:Name="MainBorderContainer"
							Width="{TemplateBinding Width}"
							Height="{TemplateBinding Height}"
							DataContext="{Binding RelativeSource={RelativeSource AncestorType=cw:CyberWindow, Mode=FindAncestor}}"
							Background="Transparent">

						<Border.LayoutTransform>
							<ScaleTransform x:Name="MainBorderCtn_ScaleTransform"
											ScaleX="1"
											ScaleY="1" />
						</Border.LayoutTransform>

						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition x:Name="LeftShadowColumnDef"
												  Width="5" />
								<ColumnDefinition Width="*" />
								<ColumnDefinition x:Name="RightShadowColumnDef"
												  Width="5" />
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="*" />
								<RowDefinition x:Name="BotShadowRowDef"
											   Height="5" />
							</Grid.RowDefinitions>

							<!--Content and title bar field-->
							<Grid x:Name="ContentAndTitleGrid"
								  Background="{TemplateBinding Background}"
								  Grid.Column="1">
								<Grid.RowDefinitions>
									<RowDefinition Height="30" />
									<RowDefinition Height="*" />
								</Grid.RowDefinitions>

								<!--Title bar-->
								<Grid x:Name="TitleBartGrid"
									  Grid.Row="0"
									  Height="30"
									  VerticalAlignment="Stretch"
									  Background="{TemplateBinding ChromeBackground}"
									  WindowChrome.IsHitTestVisibleInChrome="False">

									<Grid.ColumnDefinitions>
										<!--Title-->
										<ColumnDefinition Width="*" />
										<!--Windows Button-->
										<ColumnDefinition Width="Auto" />

									</Grid.ColumnDefinitions>

									<!--Title-->
									<Viewbox x:Name="TitleViewBox"
											 Grid.Column="0"
											 HorizontalAlignment="Left"
											 Grid.ColumnSpan="3"
											 Margin="20,8,8,8">
										<TextBlock x:Name="SubContentTitleText"
												   FontWeight="Bold"
												   FontFamily="Calibri"
												   Foreground="{StaticResource Foreground_Level2}"
												   Text="{TemplateBinding Title}"
												   TextAlignment="Center" />
									</Viewbox>

									<!--Window Buttons-->
									<StackPanel x:Name="WindowControlPanel"
												Grid.Column="1"
												Orientation="Horizontal">

										<Button x:Name="MinimizeButton"
												Style="{StaticResource WindowMinimizeButton}" />
										<Button x:Name="SmallmizeButton"
												Style="{StaticResource WindowSmallmizeButton}" />
										<Button x:Name="MaximizeButton"
												Style="{StaticResource WindowMaximizeButton}" />
										<Button x:Name="CloseButton"
												Style="{StaticResource WindowControlButton}" />
									</StackPanel>

								</Grid>

								<!--Content field-->
								<ContentPresenter x:Name="DWContentPresenter"
												  Grid.Row="1"
												  Margin="{TemplateBinding Padding}"
												  Content="{TemplateBinding Content}"
												  Visibility="Visible">
								</ContentPresenter>
							</Grid>

							<!--Shadow effect-->
							<!--Must use radient due to performance issue-->
							<!--link: https://www.telerik.com/forums/extremely-slow-when-having-dropshadow-->
							<Rectangle Grid.Column="0"
									   Grid.RowSpan="1">
								<Rectangle.Fill>
									<LinearGradientBrush EndPoint="0.5,1"
														 StartPoint="0.5,0">
										<LinearGradientBrush.RelativeTransform>
											<TransformGroup>
												<ScaleTransform CenterY="0.5"
																CenterX="0.5" />
												<SkewTransform CenterX="0.5"
															   CenterY="0.5" />
												<RotateTransform Angle="90"
																 CenterX="0.5"
																 CenterY="0.5" />
												<TranslateTransform />
											</TransformGroup>
										</LinearGradientBrush.RelativeTransform>
										<GradientStop Color="#25000000" />
										<GradientStop Color="#00000000"
													  Offset="1" />
									</LinearGradientBrush>
								</Rectangle.Fill>
							</Rectangle>
							<Rectangle Grid.Column="1"
									   Grid.Row="1"
									   Grid.ColumnSpan="1">
								<Rectangle.Fill>
									<LinearGradientBrush EndPoint="0.5,1"
														 StartPoint="0.5,0">
										<GradientStop Color="#25000000" />
										<GradientStop Color="#00000000"
													  Offset="1" />
									</LinearGradientBrush>
								</Rectangle.Fill>
							</Rectangle>
							<Rectangle Grid.Column="2"
									   Grid.RowSpan="1">
								<Rectangle.Fill>
									<LinearGradientBrush EndPoint="0.5,1"
														 StartPoint="0.5,0">
										<LinearGradientBrush.RelativeTransform>
											<TransformGroup>
												<ScaleTransform CenterY="0.5"
																CenterX="0.5" />
												<SkewTransform CenterX="0.5"
															   CenterY="0.5" />
												<RotateTransform Angle="-90"
																 CenterX="0.5"
																 CenterY="0.5" />
												<TranslateTransform />
											</TransformGroup>
										</LinearGradientBrush.RelativeTransform>
										<GradientStop Color="#25000000" />
										<GradientStop Color="#00000000"
													  Offset="1" />
									</LinearGradientBrush>
								</Rectangle.Fill>
							</Rectangle>
							<Rectangle Grid.Row="1">
								<Rectangle.Fill>
									<LinearGradientBrush EndPoint="0.5,1"
														 StartPoint="0.5,0">
										<LinearGradientBrush.RelativeTransform>
											<TransformGroup>
												<ScaleTransform CenterY="0.5"
																CenterX="0.5" />
												<SkewTransform CenterX="0.5"
															   CenterY="0.5" />
												<RotateTransform Angle="45"
																 CenterX="0.5"
																 CenterY="0.5" />
												<TranslateTransform />
											</TransformGroup>
										</LinearGradientBrush.RelativeTransform>
										<GradientStop Color="#19000000" />
										<GradientStop Color="#00000000"
													  Offset="1" />
									</LinearGradientBrush>
								</Rectangle.Fill>
							</Rectangle>
							<Rectangle Grid.Row="1"
									   Grid.Column="2">
								<Rectangle.Fill>
									<LinearGradientBrush EndPoint="0.5,1"
														 StartPoint="0.5,0">
										<LinearGradientBrush.RelativeTransform>
											<TransformGroup>
												<ScaleTransform CenterY="0.5"
																CenterX="0.5" />
												<SkewTransform CenterX="0.5"
															   CenterY="0.5" />
												<RotateTransform Angle="-45"
																 CenterX="0.5"
																 CenterY="0.5" />
												<TranslateTransform />
											</TransformGroup>
										</LinearGradientBrush.RelativeTransform>
										<GradientStop Color="#19000000" />
										<GradientStop Color="#00000000"
													  Offset="1" />
									</LinearGradientBrush>
								</Rectangle.Fill>
							</Rectangle>
						</Grid>

					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="WindowState"
								 Value="Maximized">
							<Setter TargetName="MaximizeButton"
									Property="Visibility"
									Value="Collapsed" />
						</Trigger>

						<Trigger Property="WindowState"
								 Value="Normal">
							<Setter TargetName="SmallmizeButton"
									Property="Visibility"
									Value="Collapsed" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="CyberRoundedButtonStyle"
		   TargetType="Button">
		<Setter Property="Template"
				Value="{StaticResource RoundedBtnTmpl}" />
		<Style.Triggers>
			<Trigger Property="IsEnabled"
					 Value="False">
				<Setter Property="Foreground"
						Value="{DynamicResource Background_Level2_2}" />
			</Trigger>
			<Trigger Property="IsEnabled"
					 Value="True">
				<Setter Property="Foreground"
						Value="{DynamicResource Foreground_Level3}" />
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style TargetType="{x:Type csv:CyberScrollView}"
		   x:Key="ListScrollViewStyle">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type csv:CyberScrollView}">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="*" />
							<RowDefinition Height="Auto" />
						</Grid.RowDefinitions>


						<Border Background="{TemplateBinding Background}"
								Margin="{TemplateBinding Padding}">
							<Grid>
								<Grid.RowDefinitions>
									<RowDefinition Height="*" />
									<RowDefinition Height="15" />
								</Grid.RowDefinitions>
								<ScrollContentPresenter Name="PART_ScrollContentPresenter"
														KeyboardNavigation.DirectionalNavigation="Local"
														CanContentScroll="{TemplateBinding CanContentScroll}"
														CanHorizontallyScroll="False"
														CanVerticallyScroll="False" />
								<anim:LoadingAnimation Grid.Row="1"
													   ElipNumber="5"
													   IsBusy="{Binding IsLoading}"
													   ElipseFill="{DynamicResource Foreground_Level3}" />
							</Grid>
						</Border>

						<ScrollBar Name="PART_HorizontalScrollBar"
								   Orientation="Horizontal"
								   Grid.Row="1"
								   BorderThickness="0"
								   Maximum="{TemplateBinding ScrollableWidth}"
								   ViewportSize="{TemplateBinding ViewportWidth}"
								   Value="{TemplateBinding HorizontalOffset}"
								   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
								   Background="{Binding RelativeSource={RelativeSource AncestorType={x:Type csv:CyberScrollView}, Mode=FindAncestor}, Path=ScrollBarBackground}">
							<ScrollBar.Template>
								<ControlTemplate TargetType="{x:Type ScrollBar}">
									<Grid x:Name="Bg"
										  SnapsToDevicePixels="True">
										<Border BorderBrush="{TemplateBinding BorderBrush}"
												BorderThickness="{TemplateBinding BorderThickness}"
												Background="{TemplateBinding Background}"
												Grid.Column="1" />
										<Track x:Name="PART_Track"
											   Grid.Column="1"
											   IsEnabled="{TemplateBinding IsMouseOver}">
											<Track.DecreaseRepeatButton>
												<RepeatButton Command="ScrollBar.PageLeftCommand">
													<RepeatButton.Style>
														<Style TargetType="{x:Type RepeatButton}">
															<Setter Property="OverridesDefaultStyle"
																	Value="True" />
															<Setter Property="Background"
																	Value="Transparent" />
															<Setter Property="Focusable"
																	Value="False" />
															<Setter Property="IsTabStop"
																	Value="False" />
															<Setter Property="Template">
																<Setter.Value>
																	<ControlTemplate TargetType="{x:Type RepeatButton}">
																		<Rectangle Fill="{TemplateBinding Background}"
																				   Height="{TemplateBinding Height}"
																				   Width="{TemplateBinding Width}" />
																	</ControlTemplate>
																</Setter.Value>
															</Setter>
														</Style>
													</RepeatButton.Style>
												</RepeatButton>
											</Track.DecreaseRepeatButton>
											<Track.IncreaseRepeatButton>
												<RepeatButton Command="ScrollBar.PageRightCommand">
													<RepeatButton.Style>
														<Style TargetType="{x:Type RepeatButton}">
															<Setter Property="OverridesDefaultStyle"
																	Value="True" />
															<Setter Property="Background"
																	Value="Transparent" />
															<Setter Property="Focusable"
																	Value="False" />
															<Setter Property="IsTabStop"
																	Value="False" />
															<Setter Property="Template">
																<Setter.Value>
																	<ControlTemplate TargetType="{x:Type RepeatButton}">
																		<Rectangle Fill="{TemplateBinding Background}"
																				   Height="{TemplateBinding Height}"
																				   Width="{TemplateBinding Width}" />
																	</ControlTemplate>
																</Setter.Value>
															</Setter>
														</Style>
													</RepeatButton.Style>
												</RepeatButton>
											</Track.IncreaseRepeatButton>
											<Track.Thumb>
												<Thumb>
													<Thumb.Style>
														<Style TargetType="{x:Type Thumb}">
															<Setter Property="OverridesDefaultStyle"
																	Value="True" />
															<Setter Property="IsTabStop"
																	Value="False" />
															<Setter Property="Template">
																<Setter.Value>
																	<ControlTemplate TargetType="{x:Type Thumb}">
																		<Rectangle x:Name="rectangle"
																				   Fill="{Binding RelativeSource={RelativeSource AncestorType={x:Type csv:CyberScrollView},Mode=FindAncestor},Path=ThumbBackground}"
																				   Height="{TemplateBinding Height}"
																				   SnapsToDevicePixels="True"
																				   Width="{TemplateBinding Width}" />
																	</ControlTemplate>
																</Setter.Value>
															</Setter>
														</Style>
													</Thumb.Style>
												</Thumb>
											</Track.Thumb>
										</Track>
									</Grid>
								</ControlTemplate>
							</ScrollBar.Template>
						</ScrollBar>

						<ScrollBar Name="PART_VerticalScrollBar"
								   Grid.Column="1"
								   Grid.RowSpan="2"
								   Maximum="{TemplateBinding ScrollableHeight}"
								   ViewportSize="{TemplateBinding ViewportHeight}"
								   Value="{TemplateBinding VerticalOffset}"
								   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
								   Background="{Binding RelativeSource={RelativeSource AncestorType={x:Type csv:CyberScrollView}, Mode=FindAncestor}, Path=ScrollBarBackground}">
							<ScrollBar.Template>
								<ControlTemplate TargetType="{x:Type ScrollBar}">
									<Grid x:Name="Bg"
										  SnapsToDevicePixels="True">
										<Border x:Name="border"
												BorderBrush="{TemplateBinding BorderBrush}"
												BorderThickness="0"
												Background="{TemplateBinding Background}"
												Grid.Row="1" />
										<Track x:Name="PART_Track"
											   IsDirectionReversed="True"
											   IsEnabled="True"
											   Grid.Row="1">
											<Track.DecreaseRepeatButton>
												<RepeatButton Command="ScrollBar.PageUpCommand">
													<RepeatButton.Style>
														<Style TargetType="{x:Type RepeatButton}">
															<Setter Property="OverridesDefaultStyle"
																	Value="True" />
															<Setter Property="Background"
																	Value="Transparent" />
															<Setter Property="Focusable"
																	Value="False" />
															<Setter Property="IsTabStop"
																	Value="False" />
															<Setter Property="Template">
																<Setter.Value>
																	<ControlTemplate TargetType="{x:Type RepeatButton}">
																		<Rectangle Fill="{TemplateBinding Background}"
																				   Height="{TemplateBinding Height}"
																				   Width="{TemplateBinding Width}" />
																	</ControlTemplate>
																</Setter.Value>
															</Setter>
														</Style>
													</RepeatButton.Style>
												</RepeatButton>
											</Track.DecreaseRepeatButton>
											<Track.IncreaseRepeatButton>
												<RepeatButton Command="ScrollBar.PageDownCommand">
													<RepeatButton.Style>
														<Style TargetType="{x:Type RepeatButton}">
															<Setter Property="OverridesDefaultStyle"
																	Value="True" />
															<Setter Property="Background"
																	Value="Transparent" />
															<Setter Property="Focusable"
																	Value="False" />
															<Setter Property="IsTabStop"
																	Value="False" />
															<Setter Property="Template">
																<Setter.Value>
																	<ControlTemplate TargetType="{x:Type RepeatButton}">
																		<Rectangle Fill="{TemplateBinding Background}"
																				   Height="{TemplateBinding Height}"
																				   Width="{TemplateBinding Width}" />
																	</ControlTemplate>
																</Setter.Value>
															</Setter>
														</Style>
													</RepeatButton.Style>
												</RepeatButton>
											</Track.IncreaseRepeatButton>
											<Track.Thumb>
												<Thumb>
													<Thumb.Style>
														<Style TargetType="{x:Type Thumb}">
															<Setter Property="OverridesDefaultStyle"
																	Value="True" />
															<Setter Property="IsTabStop"
																	Value="False" />
															<Setter Property="Template">
																<Setter.Value>
																	<ControlTemplate TargetType="{x:Type Thumb}">
																		<Rectangle x:Name="rectangle"
																				   Fill="{Binding RelativeSource={RelativeSource AncestorType={x:Type csv:CyberScrollView},Mode=FindAncestor},Path=ThumbBackground}"
																				   Height="{TemplateBinding Height}"
																				   SnapsToDevicePixels="True"
																				   Width="{TemplateBinding Width}" />
																		<ControlTemplate.Triggers>
																			<Trigger Property="IsEnabled"
																					 Value="False">
																				<Setter Property="Width"
																						TargetName="rectangle"
																						Value="2" />
																				<Setter Property="HorizontalAlignment"
																						TargetName="rectangle"
																						Value="Right" />
																			</Trigger>
																		</ControlTemplate.Triggers>
																	</ControlTemplate>
																</Setter.Value>
															</Setter>
														</Style>
													</Thumb.Style>
												</Thumb>
											</Track.Thumb>
										</Track>
									</Grid>
									<ControlTemplate.Triggers>
										<MultiDataTrigger>
											<MultiDataTrigger.Conditions>
												<Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=csv:CyberScrollView, Mode=FindAncestor}, Path=IsMouseOverExpandScrollbar}"
														   Value="True" />
												<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}"
														   Value="False" />
											</MultiDataTrigger.Conditions>
											<Setter TargetName="border"
													Property="Background"
													Value="Transparent" />
											<Setter TargetName="PART_Track"
													Property="IsEnabled"
													Value="False" />
										</MultiDataTrigger>


									</ControlTemplate.Triggers>
								</ControlTemplate>
							</ScrollBar.Template>
						</ScrollBar>

					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

</ResourceDictionary>